geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.5)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
small / big
small <- ggplot(data.frame(x = -8:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
big <- ggplot(data.frame(x = -8:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 0.5), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 0.5), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.7)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
small / big
small <- ggplot(data.frame(x = -8:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
big <- ggplot(data.frame(x = -8:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 0.5), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 0.5), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
small / big
small <- ggplot(data.frame(x = -8:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
big <- ggplot(data.frame(x = -8:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 0.5), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 0.5), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.9)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
small / big
small <- ggplot(data.frame(x = -8:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
big <- ggplot(data.frame(x = -8:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 0.5), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 0.5), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.8)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
small / big
small <- ggplot(data.frame(x = -6:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
big <- ggplot(data.frame(x = -6:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 0.5), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 0.5), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.8)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
small / big
t.test(rnorm(40, mean = 0, sd = 2) ~ rnorm(40, mean = 3, sd = 2))
rnorm(40, mean = 0, sd = 2)
rnorm(40, mean = 3, sd = 2)
?t.test
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 3, sd = 2))
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 3, sd = 2), var.equal = TRUE)
ex1 <- ggplot(data.frame(x = -8:11), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 1, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
rnorm(40, mean = 0, sd = 2)
rnorm(40, mean = 1, sd = 2)
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 1, sd = 2), var.equal = TRUE)
ex1 <- ggplot(data.frame(x = -8:11), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0.5, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
rnorm(40, mean = 0, sd = 2)
rnorm(40, mean = 0.5, sd = 2)
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 0.5, sd = 2), var.equal = TRUE)
ex1
ex1 <- ggplot(data.frame(x = -8:8), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0.5, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
rnorm(40, mean = 0, sd = 2)
rnorm(40, mean = 0.5, sd = 2)
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 0.5, sd = 2), var.equal = TRUE)
ex1
ex1 <- ggplot(data.frame(x = -8:8), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0.5, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 0.5), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
rnorm(40, mean = 0, sd = 2)
rnorm(40, mean = 0.5, sd = 2)
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 0.5, sd = 2), var.equal = TRUE)
set.seed(10)
rnorm(40, mean = 0, sd = 2)
rnorm(40, mean = 0.5, sd = 2)
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 0.5, sd = 2), var.equal = TRUE)
set.seed(10)
rnorm(40, mean = 0, sd = 2)
rnorm(40, mean = 1, sd = 2)
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 1, sd = 2), var.equal = TRUE)
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 0.5, sd = 2), var.equal = TRUE)
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 1, sd = 2), var.equal = TRUE)
set.seed(10)
rnorm(40, mean = 0, sd = 2)
rnorm(40, mean = 1, sd = 2)
t.test(x = rnorm(40, mean = 0, sd = 2), y = rnorm(40, mean = 1, sd = 2), var.equal = TRUE)
set.seed(10)
set.seed(10)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 0.5, sd = 2)
set.seed(10)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 0.5, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(10)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 0.5, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(100)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 0.5, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(100)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 1, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(100)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 10, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
ex1 <- ggplot(data.frame(x = -8:8), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0.5, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 0.5), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
set.seed(100)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 0.5, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
# 0.6932
ex2 <- ggplot(data.frame(x = -8:17), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 1, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 1), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
set.seed(100)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 1, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
# 0.13
ex3 <- ggplot(data.frame(x = -8:17), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 10, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 10), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
set.seed(100)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 10, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
# p < 0.001
ex1 + ex2 + ex3
ex1 <- ggplot(data.frame(x = -8:8), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 1, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 1), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
set.seed(100)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 1, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
# 0.13
ex1
ex2 <- ggplot(data.frame(x = -8:17), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 2, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 1), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
set.seed(100)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
# 0.6932
ex2 <- ggplot(data.frame(x = -8:17), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 2, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 1), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
set.seed(1)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
# 0.6932
set.seed(2)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(100)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 1, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(1)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 1, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(2)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 1, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
x <- rnorm(100, mean = 0, sd = 2)
y <- rnorm(100, mean = 1, sd = 2)
set.seed(2)
x <- rnorm(100, mean = 0, sd = 2)
y <- rnorm(100, mean = 1, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(2)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 1, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(2)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(4)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(7)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(3)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(10)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
ex2 <- ggplot(data.frame(x = -8:17), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 2, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 1), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
set.seed(10)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
# 0.6932
ex3 <- ggplot(data.frame(x = -8:17), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 10, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 10), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
set.seed(100)
x <- rnorm(40, mean = 0, sd = 2)
y <- rnorm(40, mean = 10, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
# p < 0.001
ex1 + ex2 + ex3
set.seed(100)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(1000)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(10000)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(100000)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(1000000)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(10000000)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(100000000)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
set.seed(1000000000)
x <- rnorm(30, mean = 0, sd = 2)
y <- rnorm(30, mean = 2, sd = 2)
t.test(x = x, y = y, var.equal = TRUE)
# cohen's d
library(effsize)
?cohen.d
cohen.d(acorns ~ 2)
cohen.d(acorns, mu = 2)
cohen.d(acorns ~ ., mu = 2)
library(tidyverse)
library(lterdatasampler)
maples_2003 <- hbr_maples %>%
filter(year == 2003) %>%
mutate(watershed = case_when(
watershed == "Reference" ~ "Reference",
watershed == "W1" ~ "Calcium-treated"
))
head(maples_2003, 5)
lengths_2003_summary <- maples_2003 %>%
group_by(watershed) %>%
summarize(mean_l = mean(stem_length),
sd_l = sd(stem_length),
var_l = var(stem_length),
count_l = length(stem_length),
se_l = sd_l/sqrt(count_l),
margin_l = qt(0.95, df = count_l - 1) * se_l)
lengths_2003_summary
# not getting the digits after the decimal point that you're expecting?
# try `as.data.frame()` piped in after the summarize call.
lengths_2003_summary
length_ttest <- t.test(stem_length ~ watershed, data = maples_2003, var.equal = TRUE)
length_ttest
install.packages("pwr")
library(pwr)
pwr.t.test(n = NULL, d = 0.5, sig.level = 0.05, power = 0.95)
library(tidyverse)
small <- ggplot(data.frame(x = -6:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 2), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.21)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
big <- ggplot(data.frame(x = -6:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 0.5), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 0.5), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.8)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
unequal <- ggplot(data.frame(x = -6:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 0.5), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.8)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
library(patchwork)
small/big/unequal
unequal <- ggplot(data.frame(x = -6:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 1), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 0.5), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.8)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
small/big/unequal
unequal <- ggplot(data.frame(x = -6:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 2), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 0.5), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.8)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
unequal <- ggplot(data.frame(x = -6:9), aes(x)) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 0, sd = 1.5), linewidth = 2, color = "#FF6B2B") +
geom_vline(aes(xintercept = 0), color = "#FF6B2B", lty = 2, linewidth = 2) +
stat_function(geom = "line", n = 100, fun = dnorm, args = list(mean = 3, sd = 0.5), linewidth = 2, color = "#00A38D") +
geom_vline(aes(xintercept = 3), color = "#00A38D", lty = 2, linewidth = 2) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.8)) +
theme_void() +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
small/big/unequal
?geom_vline
sqrt((1/5 + 1/25))
sqrt((1/15 + 1/15))
sample(1:100, 20, replace = FALSE)
library(tidyverse)
library(lterdatasampler)
View(hbr_maples)
maples <- hbr_maples %>%
filter(year == 2003)
maples_2003 <- hbr_maples %>%
filter(year == 2003)
?shapiro.test
w1_mass <- maples_2003 %>%
filter(watershed == "W1") %>%
pull(stem_dry_mass)
shapiro.test(w1_mass)
ref_mass <- maples_2003 %>%
filter(watershed == "Reference") %>%
pull(stem_dry_mass)
shapiro.test(ref_mass)
shapiro.test(log(ref_mass))
shapiro.test(log(w1_mass))
t.test(stem_dry_mass ~ watershed, data = maples_2003, var.equal = FALSE)
wilcox.test(stem_dry_mass ~ watershed, data = maples_2003)
library(effsize)
cohen.d(stem_dry_mass ~ watershed, data = maples_2003)
maples_2003 %>%
ggplot(aes(sample = stem_dry_mass)) +
stat_qq() +
stat_qq_line(color = "blue") +
facet_wrap(~watershed)
var.test(log(stem_dry_mass) ~ watershed, data = maples_2003)
t.test(log(stem_dry_mass) ~ watershed, data = maples_2003, var.equal = FALSE)
maples_2003 %>%
ggplot(aes(sample = log(stem_dry_mass))) +
stat_qq() +
stat_qq_line(color = "blue") +
facet_wrap(~watershed)
maples_2003 %>%
ggplot(aes(sample = log10(stem_dry_mass))) +
stat_qq() +
stat_qq_line(color = "blue") +
facet_wrap(~watershed)
var.test(log10(stem_dry_mass) ~ watershed, data = maples_2003)
t.test(log10(stem_dry_mass) ~ watershed, data = maples_2003, var.equal = TRUE)
cohen.d(log10(stem_dry_mass) ~ watershed, data = maples_2003)
shapiro.test(log10(ref_mass))
shapiro.test(log10(w1_mass))
maples_2003 %>%
ggplot(aes(x = watershed, y = stem_dry_mass)) +
geom_boxplot()
maples_2003 %>%
ggplot(aes(x = watershed, y = stem_dry_mass)) +
geom_violin()
maples_2003 %>%
ggplot(aes(x = watershed, y = stem_dry_mass)) +
geom_violin() +
geom_boxplot(width = 0.2)
maples_2003 %>%
ggplot(aes(x = watershed, y = stem_dry_mass)) +
geom_violin() +
geom_boxplot(width = 0.2, outlier.shape = NA)
