ggplot(df_para, aes(x = x, y = y)) +
geom_point()
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.33*(x - 0.2)^2 + 0.5
) %>%
as_tibble()
ggplot(df_para, aes(x = x, y = y)) +
geom_point()
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.03*(x - 0.2)^2 + 0.5
) %>%
as_tibble()
ggplot(df_para, aes(x = x, y = y)) +
geom_point()
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.03*(x - 10)^2 + 10
) %>%
as_tibble()
ggplot(df_para, aes(x = x, y = y)) +
geom_point()
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.03*(x - 15)^2 + 10
) %>%
as_tibble()
ggplot(df_para, aes(x = x, y = y)) +
geom_point()
cor.test(df_para$x, df_para$y, method = "pearson")
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.03*(x - 15)^2 + 12
) %>%
as_tibble()
cor.test(df_para$x, df_para$y, method = "pearson")
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.1*(x - 15)^2 + 12
) %>%
as_tibble()
ggplot(df_para, aes(x = x, y = y)) +
geom_point()
cor.test(df_para$x, df_para$y, method = "pearson")
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.1*(x - 15)^2 + 12
) %>%
as_tibble()
ggplot(df_para, aes(x = x, y = y)) +
geom_point()
cor.test(df_para$x, df_para$y, method = "pearson")
ggplot(df_para, aes(x = x, y = y)) +
geom_point(size = 3) +
theme_bw()
x_lm <- seq(from = 1, to = 30, by = 0.5)
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.1*(x - 15)^2 + 12
) %>%
as_tibble()
ggplot(df_para, aes(x = x, y = y)) +
geom_point(size = 3) +
theme_bw()
x_lm <- seq(from = 1, to = 30, length.out = 50)
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.1*(x - 15)^2 + 12
) %>%
as_tibble()
x_lm
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.1*(x_lm - 15)^2 + 12
) %>%
as_tibble()
ggplot(df_para, aes(x = x, y = y)) +
geom_point(size = 3) +
theme_bw()
cor.test(df_para$x, df_para$y, method = "pearson")
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.1*(x_lm - 17)^2 + 12
) %>%
as_tibble()
ggplot(df_para, aes(x = x, y = y)) +
geom_point(size = 3) +
theme_bw()
cor.test(df_para$x, df_para$y, method = "pearson")
# y = a( x – h) 2 + k
df_para <- cbind(
x = x_lm,
y = 0.1*(x_lm - 15)^2 + 12
) %>%
as_tibble()
ggplot(df_para, aes(x = x, y = y)) +
geom_point(size = 3) +
theme_bw()
cor.test(df_para$x, df_para$y, method = "pearson")
# should haves
library(tidyverse)
library(here)
library(lterdatasampler)
# would be nice to have
library(performance)
library(broom)
library(flextable)
library(ggeffects)
library(car)
sal <- and_vertebrates %>%
# filter for the species and unit type
filter(species == "Coastal giant salamander",
unittype %in% c("C", "P", "SC")) %>%
# creating a new column with the full unit name
mutate(unit_name = case_when(
unittype == "C" ~ "cascade",
unittype == "P" ~ "pool",
unittype == "SC" ~ "channel"
)) %>%
# transforming the length variable with a natural log
mutate(tf = log(length_1_mm))
naniar::gg_miss_var(sal, facet = unit_name)
sal_summary <- sal %>%
group_by(unit_name) %>%
summarize(mean = mean(length_1_mm, na.rm = TRUE),
sd = sd(length_1_mm, na.rm = TRUE),
count = length(length_1_mm),
se = sd/sqrt(count),
var = var(length_1_mm, na.rm = TRUE))
sal_summary
# if the largest sample variance is < 4× the smallest sample variance, the variances are close enough
flextable(sal_summary)
flextable(sal_summary) %>%
set_header_labels(unit_name = "Unit name",
mean = "Mean length (mm)",
sd = "Standard deviation",
count = "Number of observations",
se = "Standard error",
var = "Variance")
# should haves
library(tidyverse)
library(here)
library(lterdatasampler)
# would be nice to have
library(performance)
library(broom)
library(flextable)
library(ggeffects)
library(car)
set.seed(666)
df <- cbind(
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 7, sd = 1),
z = rnorm(n = 35, mean = 10, sd = 1)
)
View(df)
df <- cbind(
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 7, sd = 1),
z = rnorm(n = 35, mean = 10, sd = 1)
) %>%
as_tibble()
df <- cbind(
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 7, sd = 1),
z = rnorm(n = 35, mean = 10, sd = 1)
) %>%
as_tibble() %>%
pivot_longer(cols = x:y)
df <- cbind(
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 7, sd = 1),
z = rnorm(n = 35, mean = 10, sd = 1)
) %>%
as_tibble() %>%
pivot_longer()
set.seed(666)
df <- cbind(
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 7, sd = 1),
z = rnorm(n = 35, mean = 10, sd = 1)
) %>%
as_tibble()
df <- cbind(
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 7, sd = 1),
z = rnorm(n = 35, mean = 10, sd = 1)
) %>%
as_tibble() %>%
pivot_longer(cols = x:z)
aov(value ~ name, data = df)
anova <- aov(value ~ name, data = df)
summary(anova)
linmod <- lm(value ~ name, data = df)
summary(linmod)
TukeyHSD(anova)
df %>% group_by(name) %>% summarize(mean = mean(value))
anova(linmod)
summary(anova)
summary(linmod)
?lm
?aov
df <- cbind(
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 10, sd = 1),
z = rnorm(n = 35, mean = 5, sd = 1)
) %>%
as_tibble() %>%
pivot_longer(cols = x:z)
set.seed(666)
df <- cbind(
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 10, sd = 1),
z = rnorm(n = 35, mean = 5, sd = 1)
) %>%
as_tibble() %>%
pivot_longer(cols = x:z)
anova <- aov(value ~ name, data = df)
summary(anova)
TukeyHSD(anova)
linmod <- lm(value ~ name, data = df)
summary(linmod)
summary(anova)
df %>%
group_by(name) %>%
summarize(mean = mean(value))
2.8+7.3
2.8+2.03
2.81+2.03
df %>%
group_by(name) %>%
summarize(mean = round(mean(value), digits = 3))
?mean
df %>%
group_by(name) %>%
summarize(mean = mean(value))
summary(anova)
TukeyHSD(anova)
linmod <- lm(value ~ name, data = df)
summary(linmod)
2.8146+7.3039
2.8146+2.0343
df %>%
group_by(name) %>%
summarize(mean = mean(value))
linmod <- lm(value ~ name, data = df)
summary(linmod)
emmeans::contrast(linmod)
library(emmeans)
?contrast
emmeans(linmod, ~ name)
df %>%
group_by(name) %>%
summarize(mean = mean(value))
contrast(emmeans(linmod, ~ name))
TukeyHSD(anova)
contrast(emmeans(linmod, ~ name), method = "tukey")
library(tidyverse)
df <- cbind(
# generating data that will for sure be different in means
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 10, sd = 1),
z = rnorm(n = 35, mean = 5, sd = 1)
) %>%
# make this a data frame
as_tibble() %>%
# put it into long format
pivot_longer(cols = x:z)
```{r}
ggplot(data = df, aes(x = name, y = value)) +
geom_jitter()
ggplot(data = df, aes(x = name, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666))
ggplot(data = df, aes(x = name, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666)) +
stat_summary(geom = "point", fun = mean)
ggplot(data = df, aes(x = name, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666)) +
stat_summary(geom = "point", fun = mean, size = 10)
ggplot(data = df, aes(x = name, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.4) +
stat_summary(geom = "point", fun = mean, size = 3)
?stat_summary
ggplot(data = df, aes(x = name, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.4) +
stat_summary(geom = "pointrange", fun = mean, fun.min = mean - sd, fun.max = mean + sd, size = 3)
ggplot(data = df, aes(x = name, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.4) +
stat_summary(geom = "bar", fun = mean)
ggplot(data = df, aes(x = name, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.4) +
stat_summary(geom = "crossbar", fun = mean)
ggplot(data = df, aes(x = name, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.7) +
stat_summary(geom = "crossbar", fun = mean)
ggplot(data = df, aes(x = name, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.7) +
stat_summary(geom = "crossbar", fun = mean) +
theme_bw()
df %>%
summarize(mean = mean(value)) %>%
flextable()
df %>%
group_by(name) %>%
summarize(mean = mean(value)) %>%
flextable()
df %>%
group_by(name) %>%
summarize(mean = round(mean(value), digits = 3)) %>%
flextable()
df <- cbind(
# generating data that will for sure be different in means
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 10, sd = 1),
z = rnorm(n = 35, mean = 5, sd = 1)
) %>%
# make this a data frame
as_tibble() %>%
# put it into long format
pivot_longer(cols = x:z) %>%
rename(name = "group")
df <- cbind(
# generating data that will for sure be different in means
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 10, sd = 1),
z = rnorm(n = 35, mean = 5, sd = 1)
) %>%
# make this a data frame
as_tibble() %>%
# put it into long format
pivot_longer(cols = x:z) %>%
rename("group" = name)
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.7) +
stat_summary(geom = "crossbar", fun = mean) +
theme_bw()
df %>%
group_by(group) %>%
summarize(mean = round(mean(value), digits = 3)) %>%
flextable()
set.seed(666)
df <- cbind(
# generating data that will for sure be different in means
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 10, sd = 1),
z = rnorm(n = 35, mean = 5, sd = 1)
) %>%
# make this a data frame
as_tibble() %>%
# put it into long format
pivot_longer(cols = x:z) %>%
rename("group" = name)
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.7) +
stat_summary(geom = "crossbar", fun = mean) +
theme_bw()
df %>%
group_by(group) %>%
summarize(mean = round(mean(value), digits = 3)) %>%
flextable()
?rnorm
df <- cbind(
# generating data that will for sure be different in means
x = rnorm(n = 35, mean = 3, sd = 1),
y = x * 2,
z = x * 5
) %>%
# make this a data frame
as_tibble() %>%
# put it into long format
pivot_longer(cols = x:z) %>%
rename("group" = name)
set.seed(666)
df <- cbind(
# generating data that will for sure be different in means
x = rnorm(n = 35, mean = 3, sd = 1),
y = rnorm(n = 35, mean = 10, sd = 1),
z = rnorm(n = 35, mean = 5, sd = 1)
) %>%
# make this a data frame
as_tibble() %>%
# put it into long format
pivot_longer(cols = x:z) %>%
rename("group" = name)
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.7) +
stat_summary(geom = "crossbar", fun = mean) +
theme_bw()
df %>%
group_by(group) %>%
summarize(mean = round(mean(value), digits = 3)) %>%
flextable()
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.7) +
stat_summary(geom = "crossbar", fun = mean) +
theme_bw()
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.7) +
stat_summary(geom = "crossbar", fun = mean) +
theme_light()
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.7) +
stat_summary(geom = "crossbar", fun = mean, color = "cornflowerblue", width = 0.5) +
theme_light()
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.7) +
stat_summary(geom = "crossbar", fun = mean, color = "cornflowerblue", width = 0.7) +
theme_light()
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.7) +
stat_summary(geom = "crossbar", fun = mean, color = "darkorange", width = 0.7) +
theme_light()
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.5) +
stat_summary(geom = "crossbar", fun = mean, color = "darkorange", width = 0.7) +
theme_light()
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.5) +
stat_summary(geom = "crossbar", fun = mean, color = "darkorange", width = 0.7) +
theme_light() +
theme(text = element_text(size = 12))
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.5) +
stat_summary(geom = "crossbar", fun = mean, color = "darkorange", width = 0.7) +
theme_light() +
theme(text = element_text(size = 14))
df %>%
group_by(group) %>%
summarize(mean = round(mean(value), digits = 3)) %>%
flextable()
anova <- aov(value ~ name, data = df)
anova <- aov(value ~ group, data = df)
summary(anova)
TukeyHSD(anova)
# summary of model
summary(linmod)
df %>%
mutate(new_group = case_when(
group == "x" ~ "intercept",
group %in% c("y", "z") ~ "slope"
)) %>%
ggplot(aes(x = new_group, y = value, group = new_group)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666))
df %>%
mutate(new_group = case_when(
group == "x" ~ "intercept",
group %in% c("y", "z") ~ "slope"
)) %>%
ggplot(aes(x = new_group, y = value, group = new_group)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666)) +
stat_summary(geom = "crossbar", fun = mean, color = "darkorange", width = 0.7)
df %>%
mutate(new_group = case_when(
group == "x" ~ "intercept",
group %in% c("y", "z") ~ "slope"
)) %>%
ggplot(aes(x = new_group, y = value, group = group)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666)) +
stat_summary(geom = "crossbar", fun = mean, color = "darkorange", width = 0.7)
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.5) +
stat_summary(geom = "point", fun = mean, color = "darkorange", width = 0.7) +
theme_light() +
theme(text = element_text(size = 14))
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.5) +
stat_summary(geom = "point", fun = mean, color = "darkorange", size = 4) +
theme_light() +
theme(text = element_text(size = 14))
ggplot(data = df, aes(x = group, y = value)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.5, shape = 21) +
stat_summary(geom = "point", fun = mean, color = "darkorange", size = 4) +
theme_light() +
theme(text = element_text(size = 14))
df %>%
mutate(new_group = case_when(
group == "x" ~ "intercept",
group %in% c("y", "z") ~ "slope"
)) %>%
ggplot(aes(x = new_group, y = value, group = group)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.5, shape = 21) +
stat_summary(geom = "crossbar", fun = mean, color = "darkorange", width = 0.7)
df %>%
mutate(new_group = case_when(
group == "x" ~ "intercept",
group %in% c("y", "z") ~ "slope"
)) %>%
ggplot(aes(x = new_group, y = value, group = group)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.5, shape = 21) +
stat_summary(geom = "crossbar", fun = mean, color = "darkorange", width = 0.7) +
theme_light()
df %>%
mutate(new_group = case_when(
group == "x" ~ "intercept",
group %in% c("y", "z") ~ "slope"
)) %>%
ggplot(aes(x = new_group, y = value, group = group)) +
geom_point(position = position_jitter(width = 0.25, height = 0, seed = 666), alpha = 0.5, shape = 21) +
stat_summary(geom = "point", fun = mean, color = "darkorange", size = 4) +
theme_light()
