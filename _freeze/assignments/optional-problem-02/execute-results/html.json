{
  "hash": "c5e37ce0e615aeb7a0c05e40696893ab",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"OPTIONAL practice problem - One sample t-test\"\neditor: source\nfreeze: auto\ndate: 2024-04-18\ndate-modified: last-modified\n---\n\n::: {.cell}\n\n:::\n\n\n\n## 1. Description\n\nIn this optional problem, you'll try a one-sample t-test in code. In lecture, we talked about the different values you'll want to keep in mind: the t~statistic~, the p-value, the t~critical~, and the significance level (or $\\alpha$).\n\n## 2. Creosote heights\n\n![](/assignments/images/optional-problem-02/Picture1.png){fig-align=\"center\" width=\"90%\"}\n\n\nYou overhear a conversation where someone makes a claim that creosote (_Larrea tridentata_) shrubs are 3 m tall. \nOn your next walk through the desert, you decide to measure some shrubs (n = 40). From these 40 shrubs, you calculate the following summary statistics:\n\n$$\n\\begin{align}\n\\bar{y} &= 1.8 m \\\\\ns &= 0.26 m\n\\end{align}\n$$\n\n**Using your sample, you ask: how does my sample compare to the claim that I heard?**  \n\nFor this problem, use a 95% confidence level with the corresponding significance level for a two tailed test.\n\n## 3. Steps\n\n0. Draw a t-distribution and label  \n  a) the population mean,  \n  b) the **t~critical~**, and  \n  c) the significance level.  \n1. Create a script or Quarto document to work in.  \n2. Copy/paste the code in the Set up code chunk into your script. Run the code.  \n3. Write your hypotheses in biological and statistical terms.  \n4. Calculate the **t~statistic~** using the test statistic formula for a one sample t-test.    \n5. Calculate the **t~critical~** using `qt()`.\n6. Calculate the **p-value** for your test statistic using `pt()`.  \n7. Draw the **t~statistic~** and **p-value** on your distribution from step 0. Take a moment to think: do you have evidence to suggest that creosote shrubs _are not_ 3 m tall?  \n8. Use `t.test()` to verify that your calculations from steps 3-5 are correct.  \n9. In one sentence, summarize your findings.  \n\n### Set up code \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in the tidyverse\nlibrary(tidyverse)\n\n# data\ncreosote <- c(1.61, 1.86, 1.55, 2.28, 1.90, \n              1.55, 1.95, 2.02, 1.97, 1.71,\n              2.25, 1.92, 1.61, 1.14, 2.14, \n              1.79, 1.80, 2.08, 2.05, 1.98, \n              2.08, 2.03, 1.82, 1.20, 1.99,\n              1.78, 1.75, 1.36, 1.66, 1.93,\n              2.21, 1.77, 1.92, 1.78, 1.39,\n              1.68, 1.68, 1.78, 2.13, 2.03)\n```\n:::\n\n\n## 3. Solution\n\n### 0. draw a t-distribution and label\n\nYou should do this by hand, but this is just here for reference.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculating t-critical (need this for the plot)\nt_critical <- qt(p = 0.05/2, df = 40 - 1, lower.tail = FALSE)\n\n# plotting the distribution\ntdist_plot <- ggplot(data.frame(x = -5:5), aes(x)) +\n  \n  # first plotting the shaded areas under the curve (significance level)\n  # this is the area to the right\n  stat_function(geom = \"area\", \n                fun = dt, \n                args = list(df = 1), \n                xlim = c(t_critical, 30), \n                fill = \"darkgrey\") +\n  # this is the area to the left\n  stat_function(geom = \"area\", \n                fun = dt, \n                args = list(df = 1), \n                xlim = c(-30, -t_critical), \n                fill = \"darkgrey\") +\n  \n  # then, plotting the boundaries at the critical t value: 2.022\n  # this is the line on the right\n  annotate(geom = \"linerange\", \n           x = t_critical, \n           ymin = 0, \n           ymax = 0.065, \n           linewidth = 1, \n           lty = 2, \n           color = \"#000000\") +\n  # this is the line on the left\n  annotate(geom = \"linerange\", \n           x = -t_critical, \n           ymin = 0, \n           ymax = 0.065, \n           linewidth = 1, \n           lty = 2, \n           color = \"#000000\") +\n  \n  # lastly, plot the t-distribution\n  stat_function(geom = \"line\", \n                n = 1000, \n                fun = dt, \n                args = list(df = 1), \n                linewidth = 1, \n                color = \"#000000\") +\n  \n  # controlling plot aesthetics\n  scale_x_continuous(limits = c(-10, 10)) +\n  scale_y_continuous(expand = c(0, 0), \n                     limits = c(0, 0.32)) +\n  theme_void() +\n  theme(panel.grid = element_blank(),\n        plot.margin = unit(c(1, 0, 0, 0), \"cm\"))\n\ntdist_plot\n```\n\n::: {.cell-output-display}\n![](optional-problem-02_files/figure-html/t-dist-and-label-1.png){width=672}\n:::\n:::\n\n\nIn this plot, the **dashed line** is the **t~critical~**, and the **shaded areas** are the **significance level**. They are split between the two tails because this is a two tailed test (not directional).\n\n### 3. Write your hypotheses in biological and statistical terms.\n\n#### Biological\n\nCreosote shrubs are not 3 m tall.\n\n#### Statistical\n\nH~0~: Mean creosote shrub height is 3 m.  \nH~A~: Mean creosote shrub height _is not_ 3 m.\n\n### 4. Calculate the t-statistic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# claimed mean\nmu <- 3\n\n# number of observations\nn <- length(creosote)\n\n# sample mean\nybar <- mean(creosote)\n\n# sample standard deviation\ns <- sd(creosote)\n\n# sample standard error\nse <- s/sqrt(n)\n\n# t-score\nt <- (ybar-mu)/se\n\nt\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -27.84555\n```\n\n\n:::\n:::\n\n\n### 5. Calculate t~critical~\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt_critical <- qt(p = 0.05/2, df = n - 1, lower.tail = FALSE)\n\nt_critical\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.022691\n```\n\n\n:::\n:::\n\n\n### 6. Calculate the p-value\n\n\n::: {.cell}\n\n```{.r .cell-code}\n2*pt(q = t, df = n - 1, lower = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.390222e-27\n```\n\n\n:::\n:::\n\n\n### 7. Draw the t~statistic~ and p-value\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntdist_plot +\n\n  # this is the line on the right\n  annotate(geom = \"linerange\", \n           x = t, \n           ymin = 0, \n           ymax = 0.3, \n           linewidth = 1, \n           color = \"#239a89\") +\n  # this is the line on the left\n  annotate(geom = \"linerange\", \n           x = -t, \n           ymin = 0, \n           ymax = 0.3, \n           linewidth = 1, \n           color = \"#239a89\") +\n  scale_x_continuous(limits = c(-30, 30))\n```\n\n::: {.cell-output-display}\n![](optional-problem-02_files/figure-html/redraw-dist-1.png){width=672}\n:::\n:::\n\n\nIn this plot, the teal lines represent the t~statistic~. They are *way way way* past the t~critical~. I'm not plotting the p-value here, because I know for sure that the threshold has been met for me to think, \"It's so unlikely that these creosote shrubs come from a population with a mean height of 3 m that I actually think they came from a population with a different mean height.\"\n\n### 8. Use `t.test()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(creosote, mu = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tOne Sample t-test\n\ndata:  creosote\nt = -27.846, df = 39, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 3\n95 percent confidence interval:\n 1.743134 1.913366\nsample estimates:\nmean of x \n  1.82825 \n```\n\n\n:::\n:::\n\n\n### 9. Report your findings\n\nWe tested the hypothesis that creosote height was different from the claim of 3 m. We measured the height of 40 creosote shrubs and found a significant difference between our sample and the claim (two-tailed one sample t-test, t(39) = -27.8, p < 0.001, $\\alpha$ = 0.05).\n\n:::{.callout-note title=\"Reporting your findings\"}\nFor most tests, the information in the parentheses would be:  \n\n(test, distribution(degrees of freedom) = test statistic, p-value, $\\alpha$).  \n\nThis changes slightly based on the test, but this is the general form.\n:::\n\n\n\n\n",
    "supporting": [
      "optional-problem-02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}