{
  "hash": "e639474103383725006c2b1944df931f",
  "result": {
    "markdown": "---\ntitle: \"Week 1 figures - Lectures 1 and 2\"\neditor: source\nfreeze: auto\nauthor:\n  - name: An Bui\n    url: https://an-bui.com/\n    affiliation: UC Santa Barbara, Ecology, Evolution, and Marine Biology\n    affiliation-url: https://www.eemb.ucsb.edu/\ndate: 2024-03\ncategories: [regression, histogram, probability mass, probability density]\ncitation:\n  url: https://spring-2024.envs-193ds.com//lecture/lecture_week-01.html\n---\n\n\n# 0. set up\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# cleaning\nlibrary(tidyverse)\ntheme_set(theme_classic() +\n            theme(panel.grid = element_blank(),\n                  axis.text = element_text(size = 18),\n                  axis.title = element_text(size = 18)))\n\n# visualization\nlibrary(showtext)\nfont_add_google(\"Lato\", \"Lato\")\nlibrary(patchwork)\n```\n:::\n\n\n# 1. Math\n\n## sample mean\n\n$$\n\\bar{y} = \\frac{1}{n}\\sum_{i = 1}^ny_i\n$$\n\n## sample variance\n\n$$\ns^2 = \\frac{\\Sigma(y_i - \\bar{y})^2}{n - 1}\n$$\n\n## sample standard deviation\n\n$$\ns = \\sqrt{\\frac{\\Sigma(y - \\bar{y})^2}{n - 1}}\n$$\n\n## coefficient of variation\n\n$$\nCV = \\frac{\\sigma}{\\mu}\n$$\n\n## z-score\n\n$$\nz = \\frac{y_i - \\mu}{\\sigma}\n$$\n\n# 2. Mean and median\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nrnorm(n = 40, mean = 6, sd = 1) %>% \n  as_tibble() %>% \n  ggplot(aes(x = value)) +\n  geom_density() +\n  geom_vline(aes(xintercept = mean(value)), color = \"blue\") +\n  annotate(\"text\", x = 5.75, y = 0.5, label = \"mean\", color = \"blue\") +\n  geom_vline(aes(xintercept = median(value))) +\n  annotate(\"text\", x = 6.5, y  = 0.5, label = \"median\") +\n  scale_x_continuous(limits = c(2.5, 10)) +\n  scale_y_continuous(limits = c(0, 0.5)) +\n  labs(x = \"Sculpin lengths (cm)\") +\n  theme(axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n# 3. Range\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nnarrow <- rnorm(n = 30, mean = 6, sd = 1) %>% \n  as_tibble() %>% \n  mutate(y = 0) %>% \n  ggplot(aes(x = value, y = y)) +\n  geom_jitter(shape = 21) +\n  geom_point(aes(x = mean(value), y = 0), color = \"blue\", size = 3) +\n  scale_x_continuous(limits = c(0, 15)) +\n  scale_y_continuous(limits = c(-0.5, 0.5)) +\n  theme(axis.line.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.title.y = element_blank()) +\n  labs(x = \"Sculpin lengths (cm)\")\n# min: 3.78\n# max: 7.60\n\nset.seed(1)\nwide <- rnorm(n = 30, mean = 6, sd = 2) %>% \n  as_tibble() %>% \n  mutate(y = 0) %>% \n  ggplot(aes(x = value, y = y)) +\n  geom_jitter(shape = 21) +\n    geom_point(aes(x = mean(value), y = 0), color = \"blue\", size = 3) +\n  scale_x_continuous(limits = c(0, 15)) +\n  scale_y_continuous(limits = c(-0.5, 0.5)) +\n  theme(axis.line.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.title.y = element_blank()) +\n  labs(x = \"Sculpin lengths (cm)\")\n# min: 1.57\n# max: 9.19\n\nnarrow + wide\n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/range-plots-1.png){width=960}\n:::\n:::\n\n\n\n\n\n# 4. anemone regression example\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# number of arms \narms <- seq(from = 40, to = 100, by = 1)\n\n# diameter: anemones can be up to 8 cm long\nset.seed(10)\ndiam <- rnorm(length(arms), mean = seq(from = 1, to = 5, length = length(arms)), sd = 1) \n\n# create a data frame\ndf <- cbind(diam, arms) %>% \n  as.data.frame() \n\n# linear model\nlm(diam ~ arms, data = df) %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = diam ~ arms, data = df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.88354 -0.60804  0.02585  0.60891  2.23886 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -2.350896   0.477918  -4.919 7.31e-06 ***\narms         0.072937   0.006621  11.016 6.06e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9105 on 59 degrees of freedom\nMultiple R-squared:  0.6729,\tAdjusted R-squared:  0.6673 \nF-statistic: 121.3 on 1 and 59 DF,  p-value: 6.058e-16\n```\n:::\n\n```{.r .cell-code}\nshowtext_auto()\n\nggplot(df, aes(x = arms, y = diam)) +\n  geom_point(size = 2) +\n  labs(x = \"Number of arms\", y = \"Diameter (cm)\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\"))\n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/anemone-regression-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(df, aes(x = arms, y = diam)) +\n  geom_point(size = 2) +\n  # just using geom smooth for the purposes of visualization\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 2) +\n  labs(x = \"Number of arms\", y = \"Diameter (cm)\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/anemone-regression-2.png){width=672}\n:::\n:::\n\n\n# 5. histogram example\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df, aes(x = diam)) +\n  scale_x_continuous(breaks = seq(from = 0, to = 8, by = 1)) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 19), breaks = seq(from = 0, to = 18, by = 3)) +\n  geom_histogram(breaks = seq(from = 0, to = 8, by = 1), color = \"#000000\", fill = \"lightblue\") +\n  labs(x = \"Anemone diameter (cm)\", y = \"Count\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\")) \n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/histogram-1.png){width=672}\n:::\n:::\n\n\n# 6. jitter plot and box and whisker plot example\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\n\npretend_lengths <- cbind(\n  juveniles = rnorm(20, mean = 2, sd = 0.5), \n  females = rnorm(20, mean = 8, sd = 1), \n  males = rnorm(20, mean = 4, sd = 1)\n) %>% \n  as_tibble() %>% \n  pivot_longer(cols = 1:3)\n\nggplot(pretend_lengths, aes(x = name, y = value, color = name)) +\n  geom_jitter(width = 0.1, alpha = 0.8, size = 2) +\n  scale_color_manual(values = c(\"darkgreen\", \"cornflowerblue\", \"orange\")) +\n  labs(y = \"Weight (g)\") +\n  theme(axis.title.x = element_blank(),\n        legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(pretend_lengths, aes(x = name, y = value, color = name, fill = name)) +\n  geom_boxplot(alpha = 0.8) +\n  scale_color_manual(values = c(\"darkgreen\", \"cornflowerblue\", \"orange\")) +\n  scale_fill_manual(values = c(\"darkgreen\", \"cornflowerblue\", \"orange\")) +\n  labs(y = \"Weight (g)\") +\n  theme(axis.title.x = element_blank(),\n        legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\n\n# 7. Probability mass example\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data.frame(x = 1:55), aes(x)) +\n  stat_function(geom = \"bar\", n = 55, fun = dpois, args = list(lambda = 10), fill = \"coral\") +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.13)) +\n  coord_cartesian(xlim = c(0, 22)) +\n  labs(x = \"Mussel clump size (count)\", y = \"Probability mass\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\")) \n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/prob-mass-1.png){width=768}\n:::\n:::\n\n\n# 8. Probability density example\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data.frame(x = 1:20), aes(x)) +\n  stat_function(geom = \"line\", n = 100, fun = dnorm, args = list(mean = 10, sd = 2), linewidth = 1) +\n  stat_function(geom = \"area\", fun = dnorm, args = list(mean = 10, sd = 2), xlim = c(12, 14), fill = \"turquoise3\") +\n  geom_vline(xintercept = 12, lty = 2, color = \"grey\", linewidth = 1) +\n  geom_vline(xintercept = 14, lty = 2, color = \"grey\", linewidth = 1) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.22)) +\n  # coord_cartesian(xlim = c(0, 22)) +\n  labs(x = \"Individual mussel weight (g)\", y = \"Probability density\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\")) \n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/prob-density-1.png){width=768}\n:::\n\n```{.r .cell-code}\nshowtext_auto(FALSE)\n```\n:::\n\n\n# 9. probability distribution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nnormdist <- rnorm(n = 100000, mean = 0, sd = 1) %>% \n  as_tibble(rownames = \"x\")\n\nshowtext_auto()\nggplot(normdist) +\n  geom_histogram(aes(x = value, after_stat(density)), fill = \"white\", color = \"black\", bins = 100) +\n  stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = \"blue\", linewidth = 2) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.42)) +\n  labs(x = \"Continuous value\", y = \"Density\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\")) \n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/prob-dist-1.png){width=672}\n:::\n:::\n\n\n# 10. normal distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data.frame(x = -10:25), aes(x)) +\n  stat_function(geom = \"line\", n = 1000, fun = dnorm, args = list(mean = 0, sd = 1), linewidth = 1, color = \"darkorange\") +\n  annotate(\"text\", x = 4.5, y = 0.4, label = \"\\U03BC = 0, \\U03C3 = 1\", color = \"darkorange\", size = 6) +\n  stat_function(geom = \"line\", n = 1000, fun = dnorm, args = list(mean = 15, sd = 3), linewidth = 1, color = \"blue\") +\n  annotate(\"text\", x = 16, y = 0.15, label = \"\\U03BC = 15, \\U03C3 = 3\", color = \"blue\", size = 6) +\n  stat_function(geom = \"line\", n = 1000, fun = dnorm, args = list(mean = 5, sd = 5), linewidth = 1, color = \"darkgreen\") +\n  annotate(\"text\", x = 7, y = 0.1, label = \"\\U03BC = 5, \\U03C3 = 5\", color = \"darkgreen\", size = 6) +\n  scale_x_continuous(breaks = seq(-10, 25, 5)) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.42)) +\n  labs(x = \"Continuous value\", y = \"Density\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\")) \n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/normal-dist-1.png){width=672}\n:::\n:::\n\n\n# 1. z-score calculation\n\n## figure\n\nWe'll use $z = -1.23$ for this example.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# z-score\nq <- -1.23\n\nggplot(data.frame(x = -4:4), aes(x)) +\n  # zscore\n  geom_linerange(x = q, ymin = 0, ymax = 0.19) +\n  # area under the curve\n  stat_function(geom = \"area\", fun = dnorm, args = list(mean = 0, sd = 1), xlim = c(-4, -1.23), fill = \"turquoise3\") +\n  # Z distribution curve\n  stat_function(geom = \"line\", n = 1000, fun = dnorm, args = list(mean = 0, sd = 1), linewidth = 1.5, color = \"darkorange\") +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.45)) +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.title = element_blank(),\n        axis.line.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/z-score-figure-1.png){width=960}\n:::\n:::\n\n\n## calculation\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(q, mean = 0, sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1093486\n```\n:::\n:::\n\n\nYou can compare this with the [Z-score table](https://www.ztable.net/).\n\n## whale example\n\nWhat is the probability of selecting a whale that is **less than 79 ft long** given a normally distributed population with $\\mu = 82$ ft with $\\sigma = 4$ ft?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate the z-score\nwhale_z <- (79 - 82)/4\n  \n# calculate the probability under the curve\npnorm(whale_z, mean = 0, sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2266274\n```\n:::\n:::\n\n\n\n# 1. 68-95-99.7 rule\n\nIn a normal distribution, **68%** of values lie within 1 standard deviation of the mean, **95%** within 2 standard deviations, and **99.7%** within 3 standard deviations.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlabels <- c(\n  \"\", \"\\U03BC - 3\\U03C3\", \"\\U03BC - 2\\U03C3\", \"\\U03BC - \\U03C3\", \"\\U03BC\", \"\\U03BC + \\U03C3\", \"\\U03BC + 2\\U03C3\", \"\\U03BC + 3\\U03C3\", \"\"\n)\n\nggplot(data.frame(x = -4:4), aes(x)) +\n  geom_linerange(x = 1, ymin = 0, ymax = 0.24) +\n  geom_linerange(x = -1, ymin = 0, ymax = 0.24) +\n  geom_linerange(x = 2, ymin = 0, ymax = 0.055) +\n  geom_linerange(x = -2, ymin = 0, ymax = 0.055) +\n  geom_linerange(x = 3, ymin = 0, ymax = 0.005) +\n  geom_linerange(x = -3, ymin = 0, ymax = 0.005) +\n  geom_linerange(x = 0, ymin = 0, ymax = 0.399) +\n  stat_function(geom = \"line\", n = 1000, fun = dnorm, args = list(mean = 0, sd = 1), linewidth = 1.5, color = \"darkorange\") +\n  scale_x_continuous(labels = labels, breaks = seq(-4, 4, by = 1)) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.41)) +\n  labs(x = \"\") +\n  theme_classic() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 24),\n        axis.line.y = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks = element_blank()) \n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/rule-68-95-99.7-1.png){width=1536}\n:::\n:::\n\n\n\n\n# 11. Student's t distribution\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data.frame(x = -10:10), aes(x)) +\n  stat_function(geom = \"line\", n = 1000, fun = dt, args = list(df = 1), linewidth = 1, color = \"#856F33\") +\n  annotate(\"text\", x = 3.5, y = 0.3, label = \"\\U03BD = 1\", color = \"#856F33\", size = 6) +\n  stat_function(geom = \"line\", n = 1000, fun = dt, args = list(df = 3), linewidth = 1, color = \"#E6821C\") + \n  annotate(\"text\", x = 3.5, y = 0.35, label = \"\\U03BD = 3\", color = \"#E6821C\", size = 6) +\n  stat_function(geom = \"line\", n = 1000, fun = dt, args = list(df = 5), linewidth = 1, color = \"#56E9E7\") +\n  annotate(\"text\", x = 3.5, y = 0.37, label = \"\\U03BD = 5\", color = \"#56E9E7\", size = 6) +\n  stat_function(geom = \"line\", n = 1000, fun = dt, args = list(df = 100), linewidth = 1, color = \"#04B37F\") +\n    annotate(\"text\", x = 3.5, y = 0.4, label = \"\\U03BD = 100\", color = \"#04B37F\", size = 6) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.42)) +\n  labs(x = \"Continuous value\", y = \"Density\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\")) \n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/t-dist-1.png){width=672}\n:::\n:::\n\n\n# 12. Uniform distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data.frame(x = 0:10), aes(x)) +\n  stat_function(geom = \"line\", n = 1000, fun = dunif, args = list(min = 2, max = 8), linewidth = 1, color = \"firebrick4\") +\n  annotate(\"text\", x = 2, y = 0.172, label = \"a = 2\", color = \"firebrick4\", size = 6) + \n  annotate(\"text\", x = 8, y = 0.172, label = \"b = 8\", color = \"firebrick4\", size = 6) + \n  scale_x_continuous(breaks = seq(0, 10, 2)) +\n  scale_y_continuous(expand = c(0, 0), limits = c(-0.001, 0.18)) +\n  labs(x = \"Continuous value\", y = \"Density\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\")) \n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/uniform-dist-1.png){width=672}\n:::\n:::\n\n\n# 13. Binomial distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data.frame(x = 1:20), aes(x)) +\n  stat_function(geom = \"line\", n = 20, fun = dbinom, args = list(size = 20, p = 0.1), color = \"black\") +\n  stat_function(geom = \"point\", n = 20, fun = dbinom, args = list(size = 20, p = 0.1), color = \"#6D9929\", size = 3) +\n  annotate(\"text\", x = 5.5, y = 0.29, label = \"n = 20, p = 0.1\", color = \"#6D9929\", size = 6) +\n  stat_function(geom = \"line\", n = 20, fun = dbinom, args = list(size = 20, p = 0.4), color = \"black\") +\n  stat_function(geom = \"point\", n = 20, fun = dbinom, args = list(size = 20, p = 0.4), color = \"#4A76E5\", size = 3) +\n  annotate(\"text\", x = 8, y = 0.2, label = \"n = 20, p = 0.4\", color = \"#4A76E5\", size = 6) +\n  stat_function(geom = \"line\", n = 20, fun = dbinom, args = list(size = 20, p = 0.7), color = \"black\") +\n  stat_function(geom = \"point\", n = 20, fun = dbinom, args = list(size = 20, p = 0.7), color = \"#E67960\", size = 3) +\n  annotate(\"text\", x = 15, y = 0.21, label = \"n = 20, p = 0.7\", color = \"#E67960\", size = 6) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.32)) +\n  labs(x = \"Number of successes\", y = \"Mass\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\")) \n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/binomial-dist-1.png){width=672}\n:::\n:::\n\n\n\n\n# 14. Poisson distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data.frame(x = 1:20), aes(x)) +\n  stat_function(geom = \"line\", n = 20, fun = dpois, args = list(lambda = 1), color = \"black\") +\n  stat_function(geom = \"point\", n = 20, fun = dpois, args = list(lambda = 1), color = \"coral\", size = 4) +\n  annotate(\"text\", x = 3, y = 0.37, label = \"\\U03BB = 1\", color = \"coral\", size = 6) +\n  stat_function(geom = \"line\", n = 20, fun = dpois, args = list(lambda = 4), color = \"black\") +\n  stat_function(geom = \"point\", n = 20, fun = dpois, args = list(lambda = 4), color = \"darkgreen\", size = 4) +\n  annotate(\"text\", x = 6, y = 0.2, label = \"\\U03BB = 4\", color = \"darkgreen\", size = 6) +\n  stat_function(geom = \"line\", n = 20, fun = dpois, args = list(lambda = 10), color = \"black\") +\n  stat_function(geom = \"point\", n = 20, fun = dpois, args = list(lambda = 10), color = \"turquoise\", size = 4) +\n  annotate(\"text\", x = 14, y = 0.12, label = \"\\U03BB = 10\", color = \"turquoise\", size = 6) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.42)) +\n  labs(x = \"Discrete value\", y = \"Mass\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        axis.text = element_text(size = 18),\n        axis.title = element_text(size = 18),\n        text = element_text(family = \"Lato\")) \n```\n\n::: {.cell-output-display}\n![](lecture_week-01_files/figure-html/poisson-dist-1.png){width=672}\n:::\n\n```{.r .cell-code}\nshowtext_auto(FALSE)\n```\n:::\n",
    "supporting": [
      "lecture_week-01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}