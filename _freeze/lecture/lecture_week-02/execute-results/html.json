{
  "hash": "5466eff4d06deb666bfcde4cda9b089f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week 2 figures - Lectures 3 and 4\"\neditor: source\nfreeze: auto\nexecute:\n  message: false\n  warning: false\nformat:\n  html: \n    code-fold: true\nauthor:\n  - name: An Bui\n    url: https://an-bui.com/\n    affiliation: UC Santa Barbara, Ecology, Evolution, and Marine Biology\n    affiliation-url: https://www.eemb.ucsb.edu/\npublished-title: \"Lecture date\"\ndate: 2025-04-07\ndate-modified: last-modified\ncategories: [central limit theorem, z-distribution, t-distribution, confidence intervals, qqplot, one-tailed, two-tailed, t-test, cohen's d]\ncitation:\n  url: https://spring-2024.envs-193ds.com/lecture/lecture_week-02.html\n---\n\n\n## 0. set up\n\n\n::: {.cell}\n\n:::\n\n\n## 1. Math\n\n### a. standard error\n\n$$\nstandard \\: error = SE_{\\bar{y}} = \\frac{s}{\\sqrt{n}}\n$$\n\n### b. confidence interval\n\n$$\n\\begin{align}\nCI = estimate \\: &\\pm \\: margin \\: of \\: error \\\\\nCI = \\bar{y} \\: &\\pm \\: t_{\\alpha(2), df} \\times \\frac{s}{\\sqrt{n}} \\\\\nCI = \\bar{y} \\: &\\pm \\: z_{\\alpha/2} \\times \\frac{\\sigma}{\\sqrt{n}}\n\\end{align}\n$$\n\n### c. t-statistic\n\n$$\nt_{\\alpha(2), df}\n$$\n\n$$\nt_{0.05(2), 19}\n$$\n\n### d. z-score\n\n$$\nz = \\frac{\\bar{y} - \\mu}{\\sigma - \\sqrt{n}}\n$$\n\n## 2. confidence intervals\n\nThis is the leaf example from lecture.\n\n### random number generation\n\nThis generates the \"population\": 10000 trees.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(7)\nleaf_pop <- rnorm(n = 10000, mean = 4.92, sd = 0.5)\nleaves <- sample(leaf_pop, size = 20, replace = FALSE)\n```\n:::\n\n\n### population histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# population histogram\nenframe(leaf_pop) %>% \n  ggplot(aes(x = value)) +\n  geom_histogram(fill = \"darkgreen\", \n                 color = \"darkgreen\",\n                 alpha = 0.8) +\n  geom_vline(xintercept = mean(leaf_pop),\n             linetype = 2,\n             linewidth = 2) +\n  scale_y_continuous(expand = c(0, 0)) +\n  labs(x = \"Leaf length (cm)\",\n       y = \"Count\") +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/leaf-pop-hist-1.png){width=672}\n:::\n:::\n\n\n### sample histogram\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbreakpoints <- round(seq(from = min(leaves), to = max(leaves), length.out = 7), 2)\n\nhist <- enframe(leaves) %>% \n  ggplot(aes(x = value)) +\n  geom_histogram(bins = 7, fill = \"cornflowerblue\", color = \"#000000\", breaks = breakpoints) +\n  scale_x_continuous(breaks = breakpoints) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 6), breaks = c(0, 1, 2, 3, 4, 5, 6)) +\n  theme_classic() +\n  labs(x = \"Leaf length (cm)\", y = \"Count\")\nhist\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/leaf-histogram-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n### sample density plot\n\n::: {.cell}\n\n```{.r .cell-code}\nenframe(leaves) %>% \n  ggplot(aes(x = value)) +\n  geom_density(fill = \"cornflowerblue\", color = \"#000000\", linewidth = 1) +\n  scale_x_continuous(limits = c(2.5, 7)) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.65)) +\n  geom_vline(xintercept = mean(leaves)) +\n  annotate(\"text\", x = 6, y = 0.6, label = \"sample mean = 4.84 cm\", size = 6) +\n  theme_classic() +\n  labs(x = \"Leaf length (cm)\", \n       y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/sample-density-1.png){width=672}\n:::\n:::\n\n\n### sample dot and whisker plot with confidence intervals\n\n::: {.cell}\n\n```{.r .cell-code}\nleaf_conflev <- tribble(\n  ~ conflev,\n  0.85,\n  0.90,\n  0.95,\n  0.99\n) %>% \n  mutate(lower = case_when(\n    conflev == 0.85 ~ mean(leaves) - -qt(p = 0.15/2, df = 19)*sd(leaves)/sqrt(length(leaves)),\n    conflev == 0.90 ~ mean(leaves) - -qt(p = 0.1/2, df = 19)*sd(leaves)/sqrt(length(leaves)),\n    conflev == 0.95 ~ mean(leaves) - -qt(p = 0.05/2, df = 19)*sd(leaves)/sqrt(length(leaves)),\n    conflev == 0.99 ~ mean(leaves) - -qt(p = 0.01/2, df = 19)*sd(leaves)/sqrt(length(leaves)) \n  ), \n  upper = case_when(\n    conflev == 0.85 ~ mean(leaves) + -qt(p = 0.15/2, df = 19)*sd(leaves)/sqrt(length(leaves)),\n    conflev == 0.90 ~ mean(leaves) + -qt(p = 0.1/2, df = 19)*sd(leaves)/sqrt(length(leaves)),\n    conflev == 0.95 ~ mean(leaves) + -qt(p = 0.05/2, df = 19)*sd(leaves)/sqrt(length(leaves)),\n    conflev == 0.99 ~ mean(leaves) + -qt(p = 0.01/2, df = 19)*sd(leaves)/sqrt(length(leaves))\n  )) %>% \n  mutate(mean = mean(leaves))\n  # se <- s/sqrt(n)\n\nggplot() +\n  geom_point(data = enframe(leaves), aes(x = 0.84, y = leaves),\n             alpha = 0.6, shape = 21) +\n  geom_point(data = enframe(leaves), aes(x = 0.89, y = leaves),\n             alpha = 0.6, shape = 21) +\n  geom_point(data = enframe(leaves), aes(x = 0.94, y = leaves),\n             alpha = 0.6, shape = 21) +\n  geom_point(data = enframe(leaves), aes(x = 0.98, y = leaves),\n             alpha = 0.6, shape = 21) +\n  geom_point(data = leaf_conflev, aes(x = conflev, y = mean), \n             size = 3,\n             color = \"cornflowerblue\") +\n  geom_errorbar(data = leaf_conflev, aes(x = conflev, y = mean, ymin = lower, ymax = upper), \n                width = 0.006, \n                linewidth = 1,\n                color = \"cornflowerblue\") +\n  theme_void() +\n  theme(panel.grid = element_blank()) +\n  labs(x = \"Confidence levels\", \n       y = \"Leaf length (cm)\") \n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/sample-dot-and-whisker-1.png){width=672}\n:::\n:::\n\n\n### sample qq plot\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nqq <- enframe(leaves) %>% \n  ggplot(aes(sample = value)) +\n  stat_qq_line(aes(sample = value)) +\n  stat_qq(aes(sample = value), color = \"cornflowerblue\", size = 3) +\n  theme_classic() +\n  labs(x = \"Theoretical quantiles\", y = \"Sample quantiles\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist + qq\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/sample-histogram-and-qq-plot-1.png){width=672}\n:::\n:::\n\n\n### resampling visual\n\n#### resampling with different sample sizes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleaf_5 <- rep(NA, length = 1000)\nleaf_20 <- rep(NA, length = 1000)\nleaf_40 <- rep(NA, length = 1000)\n\nleaf_20_sd <- rep(NA, length = 1000)\n\n# sample 5 leaves from population 1000x\nfor(i in 1:1000) {\n  \n  # sample 5 leaves from population\n  sample_5 <- sample(leaf_pop, size = 5, replace = FALSE) \n  sample_20 <- sample(leaf_pop, size = 20, replace = FALSE) \n  sample_40 <- sample(leaf_pop, size = 40, replace = FALSE) \n  \n  leaf_5[i] <- mean(sample_5)\n  leaf_20[i] <- mean(sample_20)\n  leaf_40[i] <- mean(sample_40)\n  \n  leaf_20_sd[i] <- sd(sample_20)\n}\n\nleaf_df <- cbind(leaf_5, leaf_20, leaf_40) %>% \n  as_tibble() %>% \n  pivot_longer(cols = 1:3) %>% \n  mutate(name = case_when(\n    name == \"leaf_5\" ~ \"n = 5\",\n    name == \"leaf_20\" ~ \"n = 20\",\n    name == \"leaf_40\" ~ \"n = 40\"\n  ),\n  name = fct_relevel(name, \"n = 5\", \"n = 20\", \"n = 40\"))\n\nleaf_df %>% \n  filter(name == \"n = 20\") %>% \n  ggplot() +\n  geom_histogram(aes(x = value),\n                 color = \"cornflowerblue\",\n                 fill = \"cornflowerblue\",\n                 alpha = 0.8) +\n  geom_vline(xintercept = mean(leaf_pop),\n             linetype = 2,\n             linewidth = 2) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 280)) +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line.y = element_blank(),\n        strip.text = element_text(size = 18)) +\n  labs(x = \"Mean leaf length (cm)\") +\n  facet_wrap(~name, ncol = 1) \n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/sampling-distributions-1.png){width=576}\n:::\n\n```{.r .cell-code}\nggplot(leaf_df) +\n  geom_histogram(aes(x = value),\n                 color = \"cornflowerblue\",\n                 fill = \"cornflowerblue\",\n                 alpha = 0.8) +\n  geom_vline(xintercept = mean(leaf_pop),\n             linetype = 2,\n             linewidth = 2) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 280)) +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.line.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        strip.text = element_text(size = 18)) +\n  labs(x = \"Mean leaf length (cm)\") +\n  facet_wrap(~name, ncol = 1) \n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/sampling-distributions-2.png){width=576}\n:::\n:::\n\n\n#### resampling confidence intervals\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleaf_20_ci <- cbind(leaf_20, leaf_20_sd) %>% \n  as_tibble() %>% \n  mutate(ci_low = leaf_20 - -qt(p = 0.05/2, df = 19)*leaf_20_sd/sqrt(20),\n         ci_high = leaf_20 + -qt(p = 0.05/2, df = 19)*leaf_20_sd/sqrt(20),\n         iter = rownames(.)) %>% \n  mutate(color = case_when(\n    ci_low <= mean(leaf_pop) & ci_high >= mean(leaf_pop) ~ \"yes\",\n    TRUE ~ \"no\"\n  ),\n  color = fct_relevel(color, \"yes\", \"no\"))\n\n# selecting 8 resamples to plot\nleaf_20_ci_sample <- leaf_20_ci %>% \n  group_by(color) %>% \n  sample_n(4) %>% \n  ungroup() %>% \n  mutate(iter = fct_inorder(iter))\n\nleaf_20_ci_sample\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 Ã— 6\n  leaf_20 leaf_20_sd ci_low ci_high iter  color\n    <dbl>      <dbl>  <dbl>   <dbl> <fct> <fct>\n1    4.90      0.429   4.70    5.10 158   yes  \n2    4.86      0.443   4.66    5.07 108   yes  \n3    4.97      0.429   4.77    5.17 712   yes  \n4    4.75      0.459   4.53    4.96 298   yes  \n5    4.71      0.432   4.51    4.91 500   no   \n6    4.75      0.369   4.58    4.92 983   no   \n7    5.28      0.483   5.06    5.51 824   no   \n8    5.22      0.450   5.00    5.43 973   no   \n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(data = leaf_20_ci_sample, aes(x = leaf_20, y = iter, color = color)) +\n  geom_vline(xintercept = mean(leaf_pop),\n             lty = 2) +\n  geom_pointrange(aes(xmin = ci_low, xmax = ci_high)) +\n  scale_color_manual(values = c(\"yes\" = \"darkgreen\", \"no\" = \"orange\")) +\n  scale_x_continuous(limits = c(mean(leaf_pop)*0.85, mean(leaf_pop)*1.15)) +\n  scale_y_discrete(limits = rev) +\n  theme(axis.title.y = element_blank(),\n        axis.line.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank()) +\n  theme(legend.position = \"none\") +\n  labs(x = \"Leaf length (cm)\")\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/resampling-n-20-1.png){width=576}\n:::\n:::\n\n\n### plotting standard error\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenframe(leaves) %>% \n  mutate(group = \"Sample\") %>% \n  ggplot(aes(x = group, y = value)) +\n  geom_point(position = position_jitter(width = 0.2, height = 0, seed = 1),\n             shape = 21,\n             alpha = 0.8) +\n  geom_point(aes(x = group, y = mean(value)),\n             color = \"cornflowerblue\",\n             size = 4) +\n  geom_errorbar(aes(ymin = mean(value) - sd(value)/sqrt(20), \n                    ymax = mean(value) + sd(value)/sqrt(20),\n                    width = 0.2),\n                color = \"cornflowerblue\",\n                linewidth = 1) +\n  labs(y = \"Leaf length (cm)\") +\n  theme(axis.title.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/standard-error-1.png){width=384}\n:::\n:::\n\n\n### calculating CI using function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHmisc::smean.cl.normal(leaves)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Mean    Lower    Upper \n4.844110 4.578826 5.109393 \n```\n\n\n:::\n\n```{.r .cell-code}\nggplot2::mean_cl_normal(leaves)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        y     ymin     ymax\n1 4.84411 4.578826 5.109393\n```\n\n\n:::\n:::\n\n\n\n### plotting with \"dry\" trees\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenframe(leaves) %>% \n  mutate(group = \"Sample\") %>% \n  ggplot() +\n  geom_point(aes(x = group, y = value),\n             position = position_jitter(width = 0.2, height = 0, seed = 1),\n             shape = 21,\n             alpha = 0.8) +\n  geom_point(aes(x = group, y = mean(value)),\n             color = \"cornflowerblue\",\n             size = 3) +\n  geom_errorbar(data = leaf_conflev %>% filter(conflev == 0.95) %>% mutate(group = \"Sample\"),\n                aes(x = group, ymin = lower, ymax = upper),\n                width = 0,\n                color = \"cornflowerblue\",\n                size = 1) +\n  geom_pointrange(data = data.frame(group = \"Dry\", mean = 3.2, lower = 3.0, upper = 3.4),\n                  aes(x = group, y = mean, ymin = lower, ymax = upper),\n                  color = \"firebrick\",\n                  size = 1,\n                  linewidth = 1) +\n  labs(y = \"Leaf length (cm)\") +\n  theme(axis.title.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/dry-comparison-plot-1.png){width=672}\n:::\n:::\n\n\n\n\n## 3. Hypothesis testing: z-distribution\n\n**Example:** Youâ€™re told that the mean weight of a coast live oak acorn is $2.1 g$. You question that claim.\nYou then choose to randomly sample 30 acorns and calculate the sample mean: $\\bar{y} = 2.6 g$. You also (miraculously) know the population standard deviation: $\\sigma = 0.3 g$.  \n\nDo you have evidence to refute this claim? \n\nFirst, store some numbers: \n\n::: {.cell}\n\n```{.r .cell-code}\nacorn_mean <- 2.1\nacorn_sd <- 0.45\nsample_mean <- 2.2\n```\n:::\n\n\nPlotting the acorn population distribution:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin <- acorn_mean-(3*acorn_sd)\nmax <- acorn_mean+(3*acorn_sd)\n\nacorn_pop_hist <- data.frame(x = min:max) %>% \n  ggplot(aes(x)) +\n  stat_function(geom = \"line\", \n                n = 1000, \n                fun = dnorm, \n                args = list(mean = acorn_mean, sd = acorn_sd), \n                linewidth = 2, \n                color = \"darkgoldenrod\") +\n  geom_vline(xintercept = acorn_mean, \n             linetype = 2, \n             linewidth = 2) +\n  scale_x_continuous(breaks = c(acorn_mean-3*acorn_sd,\n                                acorn_mean-2*acorn_sd, \n                                acorn_mean-acorn_sd,\n                                acorn_mean, \n                                acorn_mean+acorn_sd,\n                                acorn_mean+2*acorn_sd,\n                                acorn_mean+3*acorn_sd),\n                     limits = c(min, max)) +\n  labs(x = \"Acorn mass (g)\") +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line.y = element_blank())\n\nacorn_pop_hist\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/acorn-pop-hist-1.png){width=672}\n:::\n:::\n\n\nAnd with the sample mean:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npop_with_sample <- acorn_pop_hist +\n  geom_vline(xintercept = sample_mean, \n             color = \"tomato3\",\n             linewidth = 2)\npop_with_sample\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/acorn-pop-with-sample-mean-1.png){width=672}\n:::\n:::\n\n\nAnd with a sample mean at least that different: \n\n::: {.cell}\n\n```{.r .cell-code}\npop_with_sample +\n  geom_vline(xintercept = acorn_mean - (sample_mean - acorn_mean), \n             color = \"tomato3\",\n             linewidth = 2)\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/acorn-pop-with-sample-mean-at-least-that-different-1.png){width=672}\n:::\n:::\n\n\nWe can calculate a z-score using the formula:\n\n$$\n\\begin{align}\nz &= \\frac{\\bar{y} - \\mu}{\\sigma/\\sqrt{n}} \\\\\n&= \\frac{2.2 - 2.10}{0.45/\\sqrt{30}} \\\\\n&= 1.22\n\\end{align}\n$$\n\nIn this version of the z-score formula, the number of observations $n$ is included; technically, the one from before also included $n$, but since we were only choosing one individual and asking about the probability of selecting that individual, $\\sqrt{n} = 1$ so it cancelled out.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacorn_z <- (sample_mean - acorn_mean)/(acorn_sd/sqrt(30))\nacorn_z\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.217161\n```\n\n\n:::\n\n```{.r .cell-code}\npnorm(acorn_z, mean = 0, sd = 1, lower.tail = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1117714\n```\n\n\n:::\n:::\n\n\nWe can plot the z-scores against each other:\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.frame(x = -3:3) %>% \n  ggplot(aes(x)) +\n  stat_function(geom = \"area\",\n                fun = dnorm,\n                args = list(mean = 0, sd = 1),\n                xlim = c(1.96, 3),\n                fill = \"lightgrey\") +\n  stat_function(geom = \"area\",\n                fun = dnorm,\n                args = list(mean = 0, sd = 1),\n                xlim = c(-3, -1.96),\n                fill = \"lightgrey\") +\n  geom_linerange(x = 1.96, ymin = 0, ymax = 0.06) +\n  geom_linerange(x = -1.96, ymin = 0, ymax = 0.06) +\n  geom_linerange(x = acorn_z, linetype = 2, linewidth = 2,\n                 ymin = 0, ymax = 0.18) +\n  geom_linerange(x = -acorn_z, linetype = 2, linewidth = 2,\n                 ymin = 0, ymax = 0.18) +\n  stat_function(geom = \"line\", \n                n = 1000, \n                fun = dnorm, \n                args = list(mean = 0, sd = 1), \n                linewidth = 2, \n                color = \"darkgoldenrod\") +\n  scale_x_continuous(breaks = seq(-3, 3, by = 1)) +\n  scale_y_continuous(expand = c(0, 0),\n                     limits = c(0, 0.45)) +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.line.y = element_blank()) +\n  labs(x = \"Z\")\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/plotting-z-1.png){width=672}\n:::\n:::\n\n\n## 4. one vs two tailed figure\n\nIn a one-tailed test (directional, greater or lesser), all the significance is in one tail of the distribution. In a two-tailed test (not directional, different from), the significance is split between two tails of the distribution.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntwo <- ggplot(data.frame(x = -5:5), aes(x)) +\n  stat_function(geom = \"area\", fun = dt, args = list(df = 1), xlim = c(3, 5), fill = \"darkgrey\") +\n  geom_linerange(aes(x = 3, ymin = 0, ymax = 0.032), linewidth = 1, lty = 2, color = \"#000000\") +\n  stat_function(geom = \"area\", fun = dt, args = list(df = 1), xlim = c(-5, -3), fill = \"darkgrey\") +\n  geom_linerange(aes(x = -3, ymin = 0, ymax = 0.032), linewidth = 1, lty = 2, color = \"#000000\") +\n  stat_function(geom = \"line\", n = 1000, fun = dt, args = list(df = 1), linewidth = 1, color = \"#000000\") +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.32)) +\n  theme_void() +\n  theme(panel.grid = element_blank())\n\none <- ggplot(data.frame(x = -5:5), aes(x)) +\n  stat_function(geom = \"area\", fun = dt, args = list(df = 1), xlim = c(2, 5), fill = \"darkgrey\") +\n  geom_linerange(aes(x = 2, ymin = 0, ymax = 0.063), linewidth = 1, lty = 2, color = \"#000000\") +\n  stat_function(geom = \"line\", n = 1000, fun = dt, args = list(df = 1), linewidth = 1, color = \"#000000\") +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, 0.32)) +\n  theme_void() +\n  theme(panel.grid = element_blank())\n\none + two\n```\n\n::: {.cell-output-display}\n![](lecture_week-02_files/figure-html/one-two-tailed-test-comparison-1.png){fig-align='center' width=960}\n:::\n:::\n",
    "supporting": [
      "lecture_week-02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}