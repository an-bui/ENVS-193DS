{
  "hash": "cb19e522abc7b55847bb11034079e895",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Coding workshop: Week 3\"\ndescription: \"two types of t-tests\"\nfreeze: auto\nauthor:\n  - name: An Bui\n    url: https://an-bui.com/\n    affiliation: UC Santa Barbara, Ecology, Evolution, and Marine Biology\n    affiliation-url: https://www.eemb.ucsb.edu/\npublished-title: \"Workshop date\"\ndate: 2024-04-18\ndate-modified: last-modified\ncategories: [tidyverse, readxl, janitor, mutate, case_when, geom_qq, geom_qq_line, facet_wrap, position_jitter, geom_point, stat_summary, var.test, t.test, read_csv, pipe (%>%) operator, clean_names, select, pivot_longer, rename, group_by, reframe, sd, qt, ggplot, geom_histogram, geom_pointrange]\n---\n\n\n## 1. Summary\n\n### Packages\n- `tidyverse`  \n- `readxl`  \n- `janitor`  \n\n### Operations\n\n#### New functions\n- create new columns based on data in existing columns using `mutate()` and `case_when()`  \n- visualize QQ plots using `geom_qq()` and `geom_qq_line()`  \n- create multi-panel plots using `facet_wrap()`  \n- create jitter plots using `position = position_jitter()` within `geom_point()`  \n- visualize summary statistics using `stat_summary()`  \n- compare group variances using `var.test()`  \n- do t-tests using `t.test()`  \n\n#### Review\n- read in data using `read_csv()`  \n- chain functions together using ` %>% `  \n- clean column names using `clean_names()`  \n- select columns using `select()`  \n- make data frame longer using `pivot_longer()`  \n- rename columns using `rename()`  \n- group data using `group_by()`  \n- summarize data using `reframe()`  \n- calculate standard deviation using `sd()`  \n- calculate t-values using `qt()`  \n- visualize data using `ggplot()`  \n- create histograms using `geom_histogram()`  \n- visualize confidence intervals using `geom_pointrange()`  \n\n### General Quarto formatting tips\n\nIf you're working in the source editor (as we did in class), you can control the appearance of text, links, images, etc. using this [guide](https://quarto.org/docs/authoring/markdown-basics.html).\n\n### Data source\n\nThe bison data is a subsetted version of the bison weight data from Konza Prairie as presented in the `lterdatasampler` package (more about the data [here](https://lter.github.io/lterdatasampler/articles/knz_bison_vignette.html)). The Flint water data is from a massive citizen science sampling effort done in 2015 by the residents of Flint, Michigan - read more about this project [here](https://flintwaterstudy.org/2015/09/our-sampling-of-252-homes-demonstrates-a-high-lead-in-water-risk-flint-should-be-failing-to-meet-the-epa-lead-and-copper-rule/) and download the data [here](https://flintwaterstudy.org/2015/12/complete-dataset-lead-results-in-tap-water-for-271-flint-samples/).\n\n\n## 2. Code\n\n### 1. Set up\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in packages\nlibrary(tidyverse)\n\n# Bison from Konza Prairie LTER\nknz_bison <- read_csv(\"knz_bison.csv\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n### 2. Cleaning the bison data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknz_bison_clean <- knz_bison %>% \n  mutate(animal_sex = case_when(\n    animal_sex == \"F\" ~ \"female\",\n    animal_sex == \"M\" ~ \"male\"\n  ))\n```\n:::\n\n\nThe data frame should look something like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(knz_bison_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  data_code rec_year rec_month rec_day animal_code animal_sex animal_weight\n  <chr>        <dbl>     <dbl>   <dbl> <chr>       <chr>              <dbl>\n1 CBH01         2011        10      27 O-101       female               316\n2 CBH01         2011        10      27 O-102       female               266\n3 CBH01         2011        10      27 O-103       male                 290\n4 CBH01         2011        10      27 O-104       male                 326\n5 CBH01         2011        10      27 O-105       male                 336\n6 CBH01         2011        10      27 O-106       male                 350\n# ℹ 1 more variable: animal_yob <dbl>\n```\n\n\n:::\n:::\n\n\n### 3. Exploring the bison data\n\n#### a. Histograms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(knz_bison_clean,\n       aes(x = animal_weight,\n           fill = animal_sex)) +\n  geom_histogram(bins = 9) +\n  scale_y_continuous(expand = c(0, 0),\n                     limits = c(0, 30)) +\n  facet_wrap(~animal_sex) +\n  theme_minimal() +\n  theme(legend.position = \"none\") \n```\n\n::: {.cell-output-display}\n![](workshop-03_2024-04-18_files/figure-html/bison-histogram-1.png){width=672}\n:::\n:::\n\n\n#### b. QQ plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(knz_bison_clean,\n       aes(sample = animal_weight,\n           color = animal_sex)) +\n  geom_qq() +\n  geom_qq_line() +\n  theme_bw() +\n  facet_wrap(~animal_sex)\n```\n\n::: {.cell-output-display}\n![](workshop-03_2024-04-18_files/figure-html/bison-qq-plot-1.png){width=672}\n:::\n:::\n\n\n#### c. Jitter plots and dot and whisker\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(knz_bison_clean,\n       aes(x = animal_sex,\n           y = animal_weight,\n           color = animal_sex)) +\n  geom_point(position = position_jitter(width = 0.1, \n                                        seed = 1),\n             alpha = 0.1) +\n  stat_summary(geom = \"pointrange\",\n               fun.data = mean_cl_normal) +\n  labs(x = \"Sex\",\n       y = \"Weight (pounds)\") +\n  theme_classic() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](workshop-03_2024-04-18_files/figure-html/bison-jitter-and-dot-1.png){width=672}\n:::\n:::\n\n\n### 3. t-test\n\n#### a. check variances\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar.test(animal_weight ~ animal_sex, \n         data = knz_bison_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tF test to compare two variances\n\ndata:  animal_weight by animal_sex\nF = 0.84041, num df = 71, denom df = 67, p-value = 0.4705\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.5212348 1.3505428\nsample estimates:\nratio of variances \n         0.8404117 \n```\n\n\n:::\n:::\n\n\n\n#### b. do the t-test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(animal_weight ~ animal_sex, \n         data = knz_bison_clean,\n       var.equal = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tTwo Sample t-test\n\ndata:  animal_weight by animal_sex\nt = -1.7396, df = 138, p-value = 0.08416\nalternative hypothesis: true difference in means between group female and group male is not equal to 0\n95 percent confidence interval:\n -33.028782   2.112115\nsample estimates:\nmean in group female   mean in group male \n            311.0417             326.5000 \n```\n\n\n:::\n:::\n\n\n#### c. writing\n\nThere is no significant difference in weights between male and female bison calves (two-sample t-test, t(138) = -1.74, p = 0.08).\n\n### 4. Paired t-tests\n\n#### a. read in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in packages here\nlibrary(readxl)\nlibrary(janitor)\n\n# Flint water lead data\nflint_pb <- read_xlsx(\"Flint-Samples-WORKING-COPY.xlsx\", \n                      sheet = \"Samples from Flint Water homes\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n#### b. clean and wrangle the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflint_pb_clean <- flint_pb %>%\n  clean_names() %>% # clean names using janitor function\n  select(sample_id, pb_bottle_1_ppb_first_draw, pb_bottle_2_ppb_45_secs_flushing, pb_bottle_3_ppb_2_mins_flushing) %>% # select columns of interest\n  pivot_longer(cols = pb_bottle_1_ppb_first_draw:pb_bottle_3_ppb_2_mins_flushing) %>% # make data frame longer\n  rename(flushing_interval = name,\n         lead_ppb = value) %>% # rename columns\n  mutate(flushing_interval = case_when(\n    flushing_interval == \"pb_bottle_1_ppb_first_draw\" ~ \"first\",\n    flushing_interval == \"pb_bottle_2_ppb_45_secs_flushing\" ~ \"45 seconds\",\n    flushing_interval == \"pb_bottle_3_ppb_2_mins_flushing\" ~ \"two minutes\"\n  )) %>% # use mutate and case when to recode levels in flushing interval column\n  filter(flushing_interval != \"45 seconds\") # take out 45 seconds interval\n```\n:::\n\n\n#### c. plot the data with confidence intervals\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(flint_pb_clean,\n       aes(x = flushing_interval,\n           y = lead_ppb)) +\n  geom_point(position = position_jitter(width = 0.1, seed = 1),\n             alpha = 0.1,\n             shape = 21) +\n  stat_summary(geom = \"pointrange\",\n               fun.data = mean_cl_normal) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](workshop-03_2024-04-18_files/figure-html/flint-ci-plot-1.png){width=672}\n:::\n:::\n\n\n#### d. Summarize the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflint_pb_summary <- flint_pb_clean %>% \n  group_by(flushing_interval) %>% \n  reframe(mean = mean(lead_ppb),\n          n = length(lead_ppb),\n          sd = sd(lead_ppb),\n          se = sd/sqrt(n),\n          tval = qt(p = 0.05/2, df = n - 1, lower.tail = FALSE),\n          margin = tval*se,\n          ci_lower = mean - margin,\n          ci_higher = mean + margin)\n```\n:::\n\n\n#### e. Do a paired t-test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(lead_ppb ~ flushing_interval, \n       data = flint_pb_clean,\n       paired = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPaired t-test\n\ndata:  lead_ppb by flushing_interval\nt = 6.3748, df = 270, p-value = 7.891e-10\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n 4.827963 9.142612\nsample estimates:\nmean difference \n       6.985288 \n```\n\n\n:::\n:::\n\n\n#### f. Writing\n\nIn words: There was a significant difference in the amount of lead in parts per billion detected between samples collected immediately after turning the water on and after 2 minutes (paired t-test, t(270) = 6.37, p < 0.001).  \n\nOn average, samples collected after 2 minutes had lead levels of 10.6 ppb [95% CI: 8.07, 13.2], while samples collected immediately had lead levels of 3.66 ppb [95% CI: 2.40, 4.92].  \n\n\n\n\n\n",
    "supporting": [
      "workshop-03_2024-04-18_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}