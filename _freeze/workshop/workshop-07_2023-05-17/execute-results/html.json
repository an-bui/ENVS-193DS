{
  "hash": "6fef02355785c6b1c810e4cbbb97bcf0",
  "result": {
    "markdown": "---\ntitle: \"Coding workshop: Week 7\"\ndescription: \"linear models\"\nfreeze: auto\nexecute: \n  warning: false\n  message: false\nauthor:\n  - name: An Bui\n    url: https://an-bui.com/\n    affiliation: UC Santa Barbara, Ecology, Evolution, and Marine Biology\n    affiliation-url: https://www.eemb.ucsb.edu/\ndate: 2023-05-17\ncategories: [tidyverse, lterdatasampler, linear models, anova, tables]\ncitation:\n  url: https://an-bui.github.io/ES-193DS-W23/workshop/workshop-07_2023-05-17.html\n---\n\n\n# Set up\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# should haves\nlibrary(tidyverse)\nlibrary(here)\nlibrary(lterdatasampler)\n\n# would be nice to have\nlibrary(performance)\nlibrary(broom)\nlibrary(flextable)\nlibrary(ggeffects)\nlibrary(car)\n```\n:::\n\n\n# 1. Linear models\n\nHow does stem length predict stem dry mass?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmaples_data <- hbr_maples %>% \n  filter(year == 2003 & watershed == \"Reference\")\n```\n:::\n\n\nLook at your data (we've looked at this data set before, so we won't go through it now)\n\nThen, create some exploratory data visualization:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = maples_data, aes(x = stem_length, y = stem_dry_mass)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](workshop-07_2023-05-17_files/figure-html/exploratory-data-visualization-1.png){width=672}\n:::\n:::\n\n\nSeems like there should be a relationship between dry mass and length! Let's try a model: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelobject <- lm(stem_dry_mass ~ stem_length, data = maples_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# makes the viewer pane show a 2x2 grid of plots\n# format: par(mfrow = c(number of rows, number of columns))\npar(mfrow = c(2, 2))\nplot(modelobject)\n```\n\n::: {.cell-output-display}\n![](workshop-07_2023-05-17_files/figure-html/model-diagnostics-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# turns off the 2x2 grid - pop this under the code chunk where you set the 2x2 grid\ndev.off()\n```\n:::\n\n\n# 2. Putting things together to communicate\n\n## a. model predictions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# extract model predictions using ggpredict\npredictions <- ggpredict(modelobject, terms = \"stem_length\")\n\npredictions\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Predicted values of stem_dry_mass\n\nstem_length | Predicted |       95% CI\n--------------------------------------\n         50 |      0.02 | [0.01, 0.02]\n         60 |      0.02 | [0.02, 0.02]\n         70 |      0.02 | [0.02, 0.02]\n         80 |      0.02 | [0.02, 0.02]\n         90 |      0.02 | [0.02, 0.03]\n        100 |      0.03 | [0.02, 0.03]\n        110 |      0.03 | [0.03, 0.03]\n        120 |      0.03 | [0.03, 0.03]\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_predictions <- ggplot(data = maples_data, \n                           aes(x = stem_length, y = stem_dry_mass)) +\n  # first plot the underlying data from maples_data\n  geom_point() +\n  # then plot the predictions\n  geom_line(data = predictions, \n            aes(x = x, y = predicted), \n            color = \"blue\", linewidth = 1) +\n  # then plot the 95% confidence interval from ggpredict\n  geom_ribbon(data = predictions, \n              aes(x = x, y = predicted, ymin = conf.low, ymax = conf.high), \n              alpha = 0.2) +\n  # theme and meaningful labels\n  theme_bw() +\n  labs(x = \"Stem length (mm)\",\n       y = \"Stem dry mass (g)\")\n\nplot_predictions\n```\n\n::: {.cell-output-display}\n![](workshop-07_2023-05-17_files/figure-html/plot-predictions-on-data-1.png){width=672}\n:::\n:::\n\n\n## b. summary tables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# store the model summary as an object\nmodel_summary <- summary(modelobject)\n\n# store the ANOVA table as an object\n# anova(): special function to get analysis of variance tables for a model\nmodel_squares <- anova(modelobject)\n\nmodel_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = stem_dry_mass ~ stem_length, data = maples_data)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-0.0111253 -0.0039117 -0.0009091  0.0040911  0.0164587 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 7.003e-03  3.212e-03   2.180   0.0312 *  \nstem_length 1.958e-04  3.909e-05   5.009 1.94e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.005944 on 118 degrees of freedom\nMultiple R-squared:  0.1753,\tAdjusted R-squared:  0.1683 \nF-statistic: 25.09 on 1 and 118 DF,  p-value: 1.94e-06\n```\n:::\n\n```{.r .cell-code}\nmodel_squares\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: stem_dry_mass\n             Df    Sum Sq    Mean Sq F value   Pr(>F)    \nstem_length   1 0.0008864 0.00088642  25.089 1.94e-06 ***\nResiduals   118 0.0041691 0.00003533                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nmodel summary table:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# don't name this chunk! some intricacies with Quarto: do not name chunks with tables in them\n\nmodel_squares_table <- tidy(model_squares) %>% \n  # round the sum of squares and mean squares columns to have 5 digits (could be less)\n  mutate(across(sumsq:meansq, ~ round(.x, digits = 5))) %>% \n  # round the F-statistic to have 1 digit\n  mutate(statistic = round(statistic, digits = 1)) %>% \n  # replace the very very very small p value with < 0.001\n  mutate(p.value = case_when(\n    p.value < 0.001 ~ \"< 0.001\"\n  )) %>% \n  # rename the stem_length cell to be meaningful\n  mutate(term = case_when(\n    term == \"stem_length\" ~ \"Stem length (mm)\",\n    TRUE ~ term\n  )) %>% \n  # make the data frame a flextable object\n  flextable() %>% \n  # change the header labels to be meaningful\n  set_header_labels(df = \"Degrees of Freedom\", \n                    sumsq = \"Sum of squares\",\n                    meansq = \"Mean squares\",\n                    statistic = \"F-statistic\",\n                    p.value = \"p-value\")\n\nmodel_squares_table\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"tabwid\"><style>.cl-64678354{}.cl-64640012{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-6465c4f6{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-6465c4f7{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-6465cd2a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6465cd2b{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6465cd34{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6465cd35{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6465cd36{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6465cd37{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-64678354'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-6465cd2a\"><p class=\"cl-6465c4f6\"><span class=\"cl-64640012\">term</span></p></th><th class=\"cl-6465cd2b\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">Degrees of Freedom</span></p></th><th class=\"cl-6465cd2b\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">Sum of squares</span></p></th><th class=\"cl-6465cd2b\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">Mean squares</span></p></th><th class=\"cl-6465cd2b\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">F-statistic</span></p></th><th class=\"cl-6465cd2a\"><p class=\"cl-6465c4f6\"><span class=\"cl-64640012\">p-value</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-6465cd34\"><p class=\"cl-6465c4f6\"><span class=\"cl-64640012\">Stem length (mm)</span></p></td><td class=\"cl-6465cd35\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">1</span></p></td><td class=\"cl-6465cd35\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">0.00089</span></p></td><td class=\"cl-6465cd35\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">0.00089</span></p></td><td class=\"cl-6465cd35\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">25.1</span></p></td><td class=\"cl-6465cd34\"><p class=\"cl-6465c4f6\"><span class=\"cl-64640012\">&lt; 0.001</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-6465cd36\"><p class=\"cl-6465c4f6\"><span class=\"cl-64640012\">Residuals</span></p></td><td class=\"cl-6465cd37\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">118</span></p></td><td class=\"cl-6465cd37\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">0.00417</span></p></td><td class=\"cl-6465cd37\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\">0.00004</span></p></td><td class=\"cl-6465cd37\"><p class=\"cl-6465c4f7\"><span class=\"cl-64640012\"></span></p></td><td class=\"cl-6465cd36\"><p class=\"cl-6465c4f6\"><span class=\"cl-64640012\"></span></p></td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n# 3. Analysis of variance\n\nDo coastal giant salamander lengths differ by units?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsal <- and_vertebrates %>% \n  # filter for the species and unit type\n  filter(species == \"Coastal giant salamander\", \n         unittype %in% c(\"C\", \"P\", \"SC\")) %>% \n  # creating a new column with the full unit name\n  mutate(unit_name = case_when(\n    unittype == \"C\" ~ \"cascade\", \n    unittype == \"P\" ~ \"pool\", \n    unittype == \"SC\" ~ \"channel\"\n  )) %>% \n  # transforming the length variable with a natural log\n  mutate(tf = log(length_1_mm))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnaniar::gg_miss_var(sal, facet = unit_name) \n```\n\n::: {.cell-output-display}\n![](workshop-07_2023-05-17_files/figure-html/visualizing-the-missing-data-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsal_summary <- sal %>% \n  group_by(unit_name) %>% \n  summarize(mean = mean(length_1_mm, na.rm = TRUE),\n            sd = sd(length_1_mm, na.rm = TRUE),\n            count = length(length_1_mm), \n            se = sd/sqrt(count),\n            var = var(length_1_mm, na.rm = TRUE))\n\nsal_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 6\n  unit_name  mean    sd count    se   var\n  <chr>     <dbl> <dbl> <int> <dbl> <dbl>\n1 cascade    58.3  20.8  7697 0.238  435.\n2 channel    51.8  18.0  1994 0.403  324.\n3 pool       57.3  22.8  1943 0.517  520.\n```\n:::\n\n```{.r .cell-code}\n# if the largest sample variance is < 4× the smallest sample variance, the variances are close enough\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sal, aes(x = unit_name, y = length_1_mm)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](workshop-07_2023-05-17_files/figure-html/plotting-the-data-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(sal, aes(x = length_1_mm)) +\n  geom_histogram() +\n  facet_wrap(~ unit_name, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](workshop-07_2023-05-17_files/figure-html/plotting-the-data-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(sal, aes(sample = length_1_mm)) +\n  stat_qq_line(color = \"blue\") +\n  stat_qq() +\n  facet_wrap(~ unit_name)\n```\n\n::: {.cell-output-display}\n![](workshop-07_2023-05-17_files/figure-html/plotting-the-data-3.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nleveneTest(length_1_mm ~ unit_name, data = sal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLevene's Test for Homogeneity of Variance (center = median)\n         Df F value    Pr(>F)    \ngroup     2  20.922 8.516e-10 ***\n      11622                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# note different function from before!\nsal_anova <- aov(length_1_mm ~ unit_name, data = sal)\n\nsummary(sal_anova)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               Df  Sum Sq Mean Sq F value Pr(>F)    \nunit_name       2   67994   33997   79.07 <2e-16 ***\nResiduals   11622 4996776     430                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n9 observations deleted due to missingness\n```\n:::\n\n```{.r .cell-code}\nTukeyHSD(sal_anova)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = length_1_mm ~ unit_name, data = sal)\n\n$unit_name\n                     diff       lwr        upr     p adj\nchannel-cascade -6.545526 -7.766976 -5.3240763 0.0000000\npool-cascade    -1.036267 -2.270380  0.1978461 0.1201769\npool-channel     5.509259  3.959921  7.0585969 0.0000000\n```\n:::\n:::\n\n\ntables:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(sal_anova)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  term         df    sumsq meansq statistic   p.value\n  <chr>     <dbl>    <dbl>  <dbl>     <dbl>     <dbl>\n1 unit_name     2   67994. 33997.      79.1  7.77e-35\n2 Residuals 11622 4996776.   430.      NA   NA       \n```\n:::\n:::\n\n\n# Transformations\n\n(if we have time)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sal, aes(x = tf)) +\n  geom_histogram() +\n  facet_wrap(~ unit_name, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](workshop-07_2023-05-17_files/figure-html/tf-plots-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(sal, aes(sample = tf)) +\n  stat_qq_line(color = \"blue\") +\n  stat_qq() +\n  facet_wrap(~ unit_name)\n```\n\n::: {.cell-output-display}\n![](workshop-07_2023-05-17_files/figure-html/tf-plots-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nleveneTest(tf ~ unit_name, data = sal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLevene's Test for Homogeneity of Variance (center = median)\n         Df F value   Pr(>F)   \ngroup     2   6.103 0.002243 **\n      11622                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlog_anova <- aov(tf ~ unit_name, data = sal)\n\npar(mfrow = c(1, 2))\nplot(log_anova, which = c(1))\nplot(log_anova, which = c(2))\n```\n\n::: {.cell-output-display}\n![](workshop-07_2023-05-17_files/figure-html/log-levene-and-anova-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(log_anova)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               Df Sum Sq Mean Sq F value Pr(>F)    \nunit_name       2   20.9  10.431   83.95 <2e-16 ***\nResiduals   11622 1444.1   0.124                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n9 observations deleted due to missingness\n```\n:::\n\n```{.r .cell-code}\nTukeyHSD(log_anova)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = tf ~ unit_name, data = sal)\n\n$unit_name\n                       diff         lwr          upr     p adj\nchannel-cascade -0.11470205 -0.13546713 -0.093936962 0.0000000\npool-cascade    -0.02803709 -0.04901746 -0.007056729 0.0049454\npool-channel     0.08666495  0.06032566  0.113004248 0.0000000\n```\n:::\n:::\n",
    "supporting": [
      "workshop-07_2023-05-17_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}