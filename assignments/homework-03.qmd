---
title: "Homework 3"
editor: source
published-title: "Due date"
date: 2025-05-28
date-modified: last-modified
---

[Due on Wednesday 28 May at 11:59 PM]{style="color: #79ACBD; font-size: 24px;"}

Read the instructions carefully and make sure you have all the components on the checklist.

## Part 1. Set up tasks

### GitHub steps  

1. Create a repository called `ENVS-193DS_homework-03` on GitHub. Make sure you provide a brief description, make it public, and initialize with a README.
2. Enable GitHub pages.

### RStudio/code/computer organization steps

3. Clone your repository to your computer.
4. Commit and push the `gitignore` and `.Rproj` files with the commit message: `initial commit`.
5. Create two new folders in your `ENVS-193DS_homework-03` folder: one for `code` and another for `data`.
6. Create a new Quarto or RMarkdown document for your homework submission in the `code` folder.
7. At the top of your document, include a link to _your GitHub repository_.
8. Do all of your set up (reading in packages/data) at the top of your document.
  At minimum, you should have the following packages read in: `tidyverse`, `here`, and either `gt` or `flextable`. Other packages you may find useful would be `janitor` or `readxl`.  

Throughout the course of doing your homework, make at least 10 commits and pushes to the remote.  

## Part 2. Problems

### Problem 1. Personal data (30 points)

:::{.callout-note}
Before doing this problem, update your spreadsheet with your new observations. Save your data as a .csv or .xlsx in your `data` folder.
:::

#### a. Data summarizing (5 points)

In 1-2 sentences, describe how you could summarize your data to compare your response variable between categories or groups of your choosing. For example, are you counting observations and comparing counts between groups? Are you taking the mean and comparing means between groups? Are you finding the maximum, minimum, range? Are you adding numbers together?  

Be sure to describe _why_ comparing between the groups you chose is informative. For example, you might calculate the mean number of steps you take to compare between week days, but what about those weekdays is _different_ (e.g. "I could calculate the mean number of steps I took to compare average step count between weekdays because I have more classes on Monday than on any other day of the week, so I think I walk more on Monday.")

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.
:::

#### b. Visualization (10 points)

Using the summary you described in part a, **create a visualization of your data comparing your summarized response variable between groups**. If you are calculating a mean or median, show the underlying data in addition to your summary.

Use colors in your figure (that are not the default ggplot settings).

Make sure your axis labels are full, readable text (not just your column names). 

:::{.callout-note}
See [From Data to Viz](https://www.data-to-viz.com/) for new ideas for visualization.  
:::

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.
:::

#### c. Caption (5 points)

Write a _caption_ for your figure.

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.
:::

#### d. Table presentation (10 points)

Using `gt` or `flextable`, create a table with the same data summary that you describe in part a and visualized in part b. For example, if you described and visualized means, make a table with means. If you need to, round any numbers to one decimal point.  

Display the output.  

:::{.callout-tip}
Try _rendering_ your document here! Commit and push your changes, then find the url to your rendered output (if you get stuck, see the video on Canvas and/or the Git/GitHub basics page under the "Resources" tab).

Double check that your rendered document looks the way you would expect (e.g. tables all correct, text is formatted correctly). If not, go back and fix any issues or ask for help.
:::

### Problem 2. Affective visualization (24 points)

In this problem, you will create an **affective visualization** using your personal data in preparation for workshops during weeks 9 and 10.  

In lecture, we talked about the three vertices of data visualization: 1) exploratory, 2) affective, and 3) communicative. We've done a lot of exploratory and communicative visualization, but have yet to think about affective visualization.  

When thinking of affective visualization, you can expand your ideas of what data visualization _could_ be. Some examples of affective visualizations include:  

- [Jill Pelto's paintings](https://www.jillpelto.com/gallery-1)
- [Lorraine Woodruff-Long's warming strips quilt ](https://www.instagram.com/p/C689Kybxget/?utm_source=ig_web_copy_link&igsh=MzRlODBiNWFlZA==)
- [Stefanie Posavec and Giorgia Lupi's Dear Data project](https://www.dear-data.com/all)
- [Environmental Graphiti](https://www.environmentalgraphiti.org/series-folder)

#### a. Describe in words what an affective visualization could look like for your personal data (3-5 sentences). (2 points)

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.
:::

#### b. Create a sketch (on paper) of your idea. (2 points)  

Include a photo of this sketch in your submission.  

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.

Double check your rendered URL to make sure the photo of your sketch shows up.
:::

#### c. Make a draft of your visualization. (12 points)  

Feel free to be creative with this! _You do not have to do this in R._ You could create a sculpture, painting, textile object, etc.  

If you are making your visualization in R, show the annotated code and the output.  

If you are making your visualization outside of R, include a photo of your visualization in your submission.  

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.

If you are including a photo, double check your rendered URL to make sure the photo of your draft shows up.
:::

#### d. Write an artist statement. (8 points)

An artist statement gives the audience context to understand your work. For each of the following points, write 1-2 sentences to address:  

- the content of your piece (what are you showing?)
- the influences (what did techniques/artists/etc. did you find influential in creating your work?)
- the form of your work (written code, watercolor, oil painting, etc.)
- your process (how did you create your work?)

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.
:::

:::{.callout-note title="This is prep for workshop during week 9!"}
During week 9, we will send time providing peer review for your affective visualization. If you turn in your homework next Wednesday, you will have a draft of your affective visualization that is ready for peer review.
:::

### Problem 3. Statistical critique (36 points)

At this point, you have seen and created a lot of figures for this class. Revisit the paper you chose for your critique and your homework 2, where you described figures or tables in the text. Address the following in full sentences (3-4 sentences each).  

**For this section of your homework, you will be evaluated on the logic, conciseness, and nuance of your critique.**  

#### a. Revisit and summarize (6 points)

What are the statistical tests the authors are using to address their main research question? (Note: you have already written about this in homework 2! Find that text and provide it again here!)   

Insert the figure or table you described in Homework 2 here.  

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.
:::

#### b. Visual clarity (10 points)

In 1-3 sentences, answer the question that best fits your paper.  

If you inserted a figure in Part a: How clearly did the authors _visually_ represent their statistics in figures? For example, are the x- and y-axes in a logical position? Do they show summary statistics (means and SE, for example) and/or model predictions, and if so, do they show the underlying data?  

If you inserted a table in Part b: How clearly does the table represent the data underlying tests?  

If you have neither: Critique another figure or table in the text for visual clarity (and insert a screenshot of that figure/table in your submission).

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.
:::

#### c. Aesthetic clarity (10 points)

In 1-3 sentences, answer the question that best fits your paper.  

If you inserted a figure in Part a: How well did the authors handle "visual clutter"? How would you describe the the data:ink ratio?  

If you inserted a table in Part b: How well did the authors handle "visual clutter"? Is there any bolding/italic text to draw your eye to specific numbers?   

If you have neither: Critique another figure or table in the text for aesthetic clarity (and insert a screenshot of that figure/table in your submission).

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.
:::

#### d. Recommendations (can be longer than 4 sentences, 10 points)

What recommendations would you make to make the figure or table better? What would you take out, add, or change? Provide explanations/justifications for each of your recommendations.  

**Alternatively**, if they did not represent their statistics in a figure, what kind of figure would you recommend to them? Describe the x- and y-axes, with any geometries and aesthetics (colors, etc.). Provide enough explanation such that someone would be able to create the figure you describe in code. Provide explanations/justifications for the figure you would recommend.    

:::{.callout-tip}
Try committing and pushing your changes here! Write an _informative_ commit message.
:::
  
## Double check your assignment!

On Canvas, you will submit two links:  

1. the link to your GitHub repository **(15 points)**
2. the link to your rendered html **(15 points)**

Your GitHub repository should:  

- [ ] have an informative README with the following sections filled out: General information, Data and file information, and Rendered output. See the repo you created for workshop 7 and workshop 8 for a reference. **(15 points)**
- [ ] have separate folders for `code` and `data`. See workshops 7 and 8 for how to organize these folders. **(15 points)**
- [ ] show at least 10 commits/pushes with a descriptive, concise commit message (a few words describing what changes you are committing) **(15 points)**

Your rendered html should:  

- [ ] be organized and readable (for example: no messages, warnings, etc., text is formatted correctly with subscripts or mathematical notation where necessary, text and headers are clearly different) **(8 points)**
- [ ] include a floating table of contents (see code from workshop 7 and 8 for a reference in Quarto and RMarkdown) **(5 points)**

Additionally, your rendered html should include only the components listed below:  

- [ ] a set up chunk at the top of the document, where you have read in your packages and your data (and you should not have read in any packages or data anywhere else) **(5 points)**
- [ ] your name, the title, and the date **(3 points)**
- [ ] all code with annotations **(10 points)**

for Problem 1:  

- [ ] written responses for a
- [ ] code with annotations and output for b
- [ ] written responses for c
- [ ] code with annotations and output for d 

for Problem 2:  

- [ ] written responses for a
- [ ] image for b
- [ ] image and/or code with annotations and output for c
- [ ] written responses for d

for Problem 3:  

- [ ] written response and image for a
- [ ] written response for b  
- [ ] written response for c  
- [ ] written response for d  

Lastly, check out the **rubric on Canvas** to see the point breakdown in more detail.  

**196 total points**

