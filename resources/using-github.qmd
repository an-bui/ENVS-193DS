---
title: "Git/GitHub basics"
description: "cloning, committing, pushing, forking, pulling"
freeze: auto
execute: 
  warning: false
  message: false
author:
  - name: An Bui
    url: https://an-bui.com/
    affiliation: UC Santa Barbara, Ecology, Evolution, and Marine Biology
    affiliation-url: https://www.eemb.ucsb.edu/
date: 2024-05-17
categories: [GitHub, Git]
filters:
  - lightbox
lightbox: auto
---

## Why are we using Git/GitHub?

Git and GitHub allow us to do a few important things in data science:

- keep track of different versions of our work (so that old work is never lost forever)  
- store our work remotely (so that if our computers die, we still have access to our stuff)  
- reuse other people's work (so that we can reproduce their work and also repurpose for our own needs)  
- collaborate with others (so that you're not emailing, texting, etc. code back and forth)  

See Horst and Lowndes, ["GitHub for supporting, reusing, contributing, and failing safely."](https://openscapes.org/blog/2022-05-27-github-illustrated-series/) for a broad overview of how Git/GitHub work together, and Jenny Brian's ["Excuse me, do you have a moment to talk about version control?](https://peerj.com/preprints/3159v2/) for more.

## What is the difference between Git and GitHub?

Git is what tracks your changes (and allows you to have version control), while GitHub is a cloud hosting service for those changes. We use both together.  

## Operations

### Creating a repository and using Git/GitHub

:::{.callout-note}
#### Definitions
- **repo**: short for "repository", think of this as a folder  
- **remote**: your repository on GitHub (in the cloud)  
- **clone**: essentially making a local copy (i.e. a copy on your computer) of a remote repo  
- **commit**: track the changes you've made using Git (on your computer only)  
- **push**: _push_ the changes you've committed to GitHub (now in the cloud)  
:::

#### 1. Create a repository.

Go to the GitHub homepage. Click the green "New" button.

:::{.callout-tip}
If you're having trouble seeing the screenshot, click the image to make it bigger (this goes for all images in this tutorial).
:::

![](/resources/images/github/01_creating-new-repo.png){width=80%}

#### 2. Fill information about your new repository.

This includes the name, a description, whether it is public or private (keep your repository public for now).  

Additionally, **initialize your repository with a README.** It is very important to start your remote repository with a file, and GitHub does it for your by creating a file called `README.md`. See the README section below for more details about what it is, but for now remember to **always initialize your repository with a README.**

![](/resources/images/github/02_filling-in-info.png){width=80%}

#### 3. Clone your repo to your computer. 

When you are **"cloning"**, you are essentially making a local copy (i.e. on your computer) of your remote. Do this by clicking the green "Code" button and copying the url that shows up.  

![](/resources/images/github/03_copying-url-to-clone.png){width=80%}

Then, create a new project in RStudio. Select "Version Control".

![](/resources/images/github/04_creating-new-proj.png){width=80%}

Then, select "Git".

![](/resources/images/github/05_creating-new-proj-git.png){width=80%}

Paste the clone url into the first box. Keep your cursor in that box, then hit the Tab key. The new project directory name should automatically fill in.  

![](/resources/images/github/06_cloning-url.png){width=80%}

:::{.callout-warning}
#### Directory names
It is **very important** that your remote and local repositories have the _same name_. The easiest way to ensure this is by not typing anything into the second box. Paste the url into the first box, then hit Tab.
:::

Then, select the folder on your computer where you are keeping all your repositories for Git/GitHub. If you created a folder called "Git" or "GitHub" in your root directory, use that folder. This is something that you only have to do once; for each subsequent repo you clone from GitHub, the file path will be automatically filled in.







