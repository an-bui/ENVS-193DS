---
title: "Coding workshop: Week 6"
description: "new cleaning functions, skimr, whales"
freeze: auto
execute: 
  warning: false
  message: false
author:
  - name: An Bui
    url: https://an-bui.com/
    affiliation: UC Santa Barbara, Ecology, Evolution, and Marine Biology
    affiliation-url: https://www.eemb.ucsb.edu/
date: 2023-05-10
categories: [tidyverse, lterdatasampler, skimr, plotly, magick, NatParksPalettes, naniar]
citation:
  url: https://an-bui.github.io/ES-193DS-W23/workshop/workshop-06_2023-05-10.html
---

# Set up

Loading packages:

```{r package-set-up}
library(tidyverse) # general usage
library(here) # organization
library(naniar) # missing data visualization

library(skimr) # quick glimpse at data
library(plotly) # interactive plots
library(magick) # insert images into plots
library(NatParksPalettes) # one example of color palette package
library(wesanderson) # another example of color palette package
library(patchwork) # put plots together
```


# load in the data

```{r loading-data}
# create a new object called whales
# read in the whales data
whales <- read_csv(
  here("workshop", "data", "Graywhale_watching_2007_2019.csv")
)
```

look at missing data:

```{r missing-data-vis}
gg_miss_var(whales)
```

use `skimr` package to quickly glimpse the data:

```{r glimpse-of-data-using-skimr}
skim(whales)
```

# wrangling

```{r whales-wrangling}
whales_clean <- whales %>% 
  # creating new columns for years and months
  mutate(year_new = lubridate::year(date)) %>% 
  mutate(month_new = lubridate::month(date)) %>% 
  # create a new column for month names
  mutate(month_name = case_when(
    month_new == 2 ~ "February",
    month_new == 3 ~ "March",
    month_new == 4 ~ "April",
    month_new == 5 ~ "May"
  ),
  month_name = forcats::as_factor(month_name),
  month_name = forcats::fct_relevel(month_name, "February", "March", "April", "May")
  ) %>% 
  mutate(condition_new = case_when(
    stringr::str_detect(condition, "Excellent") ~ "excellent",
    stringr::str_detect(condition, "Good") ~ "good",
    stringr::str_detect(condition, "Fair") ~ "fair",
    stringr::str_detect(condition, "Poor") ~ "poor"
  ))
```

# create a plot and insert an image

```{r whales-2019}
# create a new data frame to filter 2019 observations
whales_2019 <- whales_clean %>% 
  filter(year_new == 2019)

# read in the whale png as a raster
whale_image <- magick::image_read(
  here("workshop", "images", "noaa-gray-whale.png")
) %>% 
  as.raster()

# make a boxplot
whales_2019_boxplot <- ggplot(data = whales_2019, aes(x = month_name, y = total)) +
  geom_boxplot(aes(fill = month_name)) +
  geom_point(position = position_jitter(width = 0.3, height = 0, seed = 1000)) +
  scale_fill_manual(values = natparks.pals("RockyMtn", 4)) +
  annotation_raster(whale_image, xmin = 2.5, xmax = 4.5, ymin = 30, ymax = 60)

whales_2019_boxplot
```

```{r interactive-plot}
ggplotly(whales_2019_boxplot)
```








