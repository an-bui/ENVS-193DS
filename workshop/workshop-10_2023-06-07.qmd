---
title: "Coding workshop: Week 10"
description: "generalized linear models"
freeze: auto
format:
  html:
    toc: true
    toc-location: left
    code-fold: false
execute:
  message: false
  warning: false
author:
  - name: An Bui
    url: https://an-bui.com/
    affiliation: UC Santa Barbara, Ecology, Evolution, and Marine Biology
    affiliation-url: https://www.eemb.ucsb.edu/
date: 2023-06-07
categories: [generalized linear models, salamanders]
citation:
  url: https://an-bui.github.io/ES-193DS-W23/workshop/workshop-10_2023-06-07.html
---

```{r set-up}
# model packages
library(MASS) # have to read this in before tidyverse 
library(lme4)
library(glmmTMB) # ok if you don't have this - just comment it out

# diagnostics and model info
library(DHARMa)
library(MuMIn)
library(ggeffects)
library(lmtest)
library(broom)

# general usage
library(tidyverse)
library(here)
library(naniar)
library(skimr)
library(GGally)
library(flextable)

salamanders <- read_csv(here("data", "salamanders.csv"))
```

# Data info from `glmmTMB`:

`site`: name of a location where repeated samples were taken  
`mined`: factor indicating whether the site was affected by mountain top removal coal mining  
`cover`: amount of cover objects in the stream (scaled)  
`sample`: repeated sample  
`DOP`: Days since precipitation (scaled)  
`Wtemp`: water temperature (scaled)  
`DOY`: day of year (scaled)  
`spp`: abbreviated species name, possibly also life stage  
`count`: number of salamanders observed  

# Explore the data set:

## histogram of counts:

```{r histogram}
ggplot(salamanders, aes(x = count)) +
  geom_histogram(bins = 17)
```

## Missingness:

```{r missingness}
gg_miss_var(salamanders) # nothing missing!
```

## Skim: 

```{r skim-dataset}
skim(salamanders)
```

## Pairs plot:  

```{r pairs-plot}
#| fig.width: 12
#| fig.height: 12
#| out.width: 90%
#| fig.align: center

salamanders %>% 
  select(!site) %>% 
  ggpairs()
```

# Question: How does salamander count vary with mined status, species, and stream cover?

## Build models

```{r models}
# linear model, we know this is wrong
salmod1 <- lm(count ~ cover + mined + spp, data = salamanders)

# generalized linear model with Poisson distribution
salmod2 <- glm(count ~ cover + mined + spp, data = salamanders, family = "poisson")
salmod2.a <- glm(count ~ cover + mined + spp, data = salamanders, family = "poisson")

# generalized linear model with negative binomial distribution
salmod3 <- glm.nb(count ~ cover + mined + spp, data = salamanders)
salmod3.a <- glmmTMB(count ~ cover + mined + spp, data = salamanders, family = "nbinom2")

# generalized linear model with Poisson distribution and random effect of site
salmod4 <- glmer(count ~ cover + mined  + spp + (1|site), data = salamanders, family = "poisson")
salmod4.a <- glmmTMB(count ~ cover + mined  + spp + (1|site), data = salamanders, family = "poisson")

# generalized linear model with negative binomial distribution and random effect of site
salmod5 <- glmer.nb(count ~ cover + mined  + spp + (1|site), data = salamanders)
salmod5.a <- glmmTMB(count ~ cover + mined + spp + (1|site), data = salamanders, family = "nbinom2")
```

## Look at residuals

```{r model-residuals}
#| fig.height: 6
#| fig.width: 8
#| fig.align: center

# check diagnostics
plot(simulateResiduals(salmod1)) # bad
plot(simulateResiduals(salmod2)) # bad
plot(simulateResiduals(salmod3)) # ok?
plot(simulateResiduals(salmod4)) # bad
plot(simulateResiduals(salmod5)) # ok?
```

## Which distribution to use?

```{r choosing-model}
MuMIn::model.sel(salmod1, salmod2, salmod3, salmod4, salmod5)
```

## Model summary

```{r summaries}
# model object
salmod3

# summary 
summary(salmod3)

# confidence intervals
confint(salmod3)

# adjusted R2
r.squaredGLMM(salmod3)
```

```{r}
# model object in table
salmod3 %>% 
  as_flextable()
```


## Visualizing:

```{r visualization}
#| fig.width: 12
#| fig.height: 10
#| out.width: 90%
#| fig.align: center

predictions <- ggpredict(salmod3, terms = c("cover", "mined", "spp")) %>% 
  rename(mined = group,
         spp = facet)

ggplot(salamanders, aes(x = cover, y = count, fill = mined)) +
  geom_point(aes(color = mined), alpha = 0.5) +
  facet_wrap(~spp, scales = "free_y") +
  geom_line(data = predictions, aes(x = x, y = predicted, color = mined)) +
  geom_ribbon(data = predictions, aes(x = x, y = predicted, ymin = conf.low, ymax = conf.high, fill = mined), alpha = 0.2) +
  scale_fill_manual(values = c("yes" = "blue", "no" = "orange")) +
  scale_color_manual(values = c("yes" = "blue", "no" = "orange")) +
  theme_bw() +
  facet_wrap(~spp, scales = "free_y") +
  labs(fill = "Mined", color = "Mined")
```

